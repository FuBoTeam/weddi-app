{"version":3,"sources":["images/uploadLoading.svg","images/loading.gif","Board/Background.tsx","services/configService.ts","utils/random.ts","api/index.ts","Provider/FirebaseApp/context.ts","Provider/FirebaseApp/provider.tsx","Provider/FirebaseApp/useHooks.ts","Greeting/ImagePicker.tsx","Greeting/ImageUploader.tsx","Greeting/GreetingForm.tsx","Board/Dialog.js","Greeting/index.js","images/preloadImage.ts","Board/queue.ts","Board/index.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","BG_STATE","CHYY_CONFIG","doc","title","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","post","namespace","img","endpoint","bgImgsShouldBePicked","fmImgsShouldBePicked","TLTY_CONFIG","YKYL_CONFIG","TEST_CONFIG","configService","_config","gnbId","this","getConfigById","Error","random","a","b","lower","Math","ceil","min","upper","floor","max","combinationList","list","k","result","i","length","j","includes","push","permutationList","writePost","database","postData","postId","ref","config","key","wrappedPostData","modifiedTime","Date","toISOString","userAgent","navigator","id","child","set","listAllImages","storage","size","listAll","then","listResult","Promise","all","items","map","item","getDownloadURL","uploadImage","imgName","image","put","FirebaseContext","createContext","FirebaseAppProvider","props","firebaseConfig","appName","value","useMemo","existingApp","apps","find","app","name","options","Object","keys","every","initializeApp","Provider","useDatabase","useContext","useStorage","ImagePicker","imgUrls","onChange","disabled","totalImages","useState","pickerIndex","setPickerIndex","plusImgIdx","nextIdx","Fragment","className","url","checked","hidden","type","readOnly","style","backgroundImage","src","alt","onClick","ImageUploader","upload","setUpload","placeholder","accept","event","target","files","startsWith","loadImage","canvas","toBlob","blob","maxWidth","maxHeight","orientation","noRevoke","URL","createObjectURL","GreetingForm","onSubmit","isProcessing","setIsProcessing","greetings","form","setForm","isUploadPage","setIsUploadPage","setImgUrls","pickedImg","setPickedImg","uploadImg","setUploadImg","useEffect","imageUrls","imgCandidates","onTextChangeHandler","trim","preventDefault","isValid","imgUrl","uuid","v4","uploadProc","uploadFlow","required","loadingIcon","Dialog","user","show","loading","setLoading","imgRef","useRef","mayMobile","window","innerWidth","verticalImg","current","clientWidth","clientHeight","modalStyle","margin","onLoad","Greeting","modalDisplay","setModalDisplay","getUpperUrl","paths","match","split","pop","join","setUser","formData","setTimeout","history","href","preloadImageAsync","resolve","callback","Image","onload","preloadImage","Background","isLoading","setIsLoading","BG_HIDDEN","bgState","setBgState","permutation","setPermutation","BG_FADE_OUT","BG_FADE_IN","BG_VISIBLE","bgImgUrl","Queue","q","element","splice","subscribePost","listener","newFeeds","oldFeeds","on","data","val","onNewPost","feed","interval","setInterval","nextFeed","isEmpty","clearInterval","Board","unsubscribe","App","init","params","document","path","component","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","Home","ReactDOM","render","basename","process","forceRefresh","getElementById","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.500e073c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/uploadLoading.a33612b2.svg\";","module.exports = __webpack_public_path__ + \"static/media/loading.822699a4.gif\";","import React, { useState, useEffect } from 'react';\nimport { useStorage } from '../Provider/FirebaseApp';\nimport configService from '../services/configService';\nimport { listAllImages } from '../api';\nimport { combinationList, permutationList } from '../utils/random';\nimport { preloadImageAsync } from '../images/preloadImage';\n\nimport loadingIcon from '../images/loading.gif';\nimport './board.scss';\n\nconst TIME_FADE_OUT = 1000;\nconst TIME_FADE_IN = 1000;\nconst TIME_HIDDEN = 1500;\nconst TIME_UPDATE_BACKGROUND = 30 * 60 * 1000;\n\nenum BG_STATE {\n  BG_FADE_IN = 'BG_FADE_IN',\n  BG_FADE_OUT = 'BG_FADE_OUT',\n  BG_HIDDEN = 'BG_HIDDEN',\n  BG_VISIBLE = 'BG_VISIBLE',\n}\n\nexport const Background = () => {\n  const storage = useStorage();\n  const [isLoading, setIsLoading] = useState(true);\n  const [bgState, setBgState] = useState(BG_STATE.BG_HIDDEN);\n  const [permutation, setPermutation] = useState<string[]>([]);\n\n  useEffect(() => {\n    if (isLoading) {\n      listAllImages(storage)().then(imgUrls => {\n        Promise.all(\n          imgUrls.map(preloadImageAsync)\n        ).then(() => setIsLoading(false));\n        setPermutation(\n          permutationList(\n            combinationList(imgUrls, configService.config.img.bgImgsShouldBePicked)\n          )\n        );\n      });\n    }\n  }, [storage, isLoading]);\n\n  useEffect(() => {\n    switch(bgState) {\n      case BG_STATE.BG_FADE_OUT: {\n        setTimeout(() => {\n          setBgState(BG_STATE.BG_HIDDEN);\n          setPermutation((permutation) => permutationList(permutation));\n        }, TIME_FADE_OUT);\n        break;\n      }\n      case BG_STATE.BG_HIDDEN: {\n        setTimeout(() => {\n          setBgState(BG_STATE.BG_FADE_IN);\n        }, TIME_HIDDEN);\n        break;\n      }\n      case BG_STATE.BG_FADE_IN: {\n        setTimeout(() => {\n          setBgState(BG_STATE.BG_VISIBLE);\n        }, TIME_FADE_IN);\n        break;\n      }\n      case BG_STATE.BG_VISIBLE: {\n        setTimeout(() => {\n          setBgState(BG_STATE.BG_FADE_OUT);\n        }, TIME_UPDATE_BACKGROUND);\n        break;\n      }\n      default: {\n        break;\n      }\n    }\n  }, [bgState]);\n\n  return (\n    <div className=\"container\">\n      {\n        isLoading && (\n          <div className=\"loading\">\n            <img src={loadingIcon} alt=\"\" />\n            <span>Loading...</span>\n          </div>\n        )\n      }\n      {\n        permutation.map((bgImgUrl) =>\n          <img\n            key={bgImgUrl}\n            className={\n              isLoading || bgState === BG_STATE.BG_HIDDEN ? 'hidden' :\n                bgState === BG_STATE.BG_VISIBLE ? 'visible' :\n                  bgState === BG_STATE.BG_FADE_IN ? 'fade-in' :\n                    bgState === BG_STATE.BG_FADE_OUT ? 'fade-out' :\n                      ''\n            }\n            src={bgImgUrl}\n            alt=\"\"\n          />\n        )\n      }\n    </div>\n  );\n};\n","const CHYY_CONFIG: ConfigService.Config = {\n  doc: {\n    title: \"<3 YaYun & ChinHui <3\"\n  },\n  firebase: {\n    apiKey: \"AIzaSyD_1irJWOgT9x5fvmbXJm0fRRRZ8DNUfpU\",\n    authDomain: \"weddi-app.firebaseapp.com\",\n    databaseURL: \"https://weddi-app.firebaseio.com/\",\n    projectId: \"weddi-app\",\n    storageBucket: \"image.weddi.app\",\n    messagingSenderId: \"324415165027\",\n    appId: \"1:324415165027:web:76b8291835ef32c5c75e56\"\n  },\n  post: {\n    namespace: \"chyy\",\n  },\n  img: {\n    namespace: \"chyy\",\n    endpoint: \"https://storage.googleapis.com/image.weddi.app/\",\n    bgImgsShouldBePicked: 40,\n    fmImgsShouldBePicked: 5\n  }\n};\n\nconst TLTY_CONFIG: ConfigService.Config = {\n  doc: {\n    title: \"<3 Tony & Claire <3\"\n  },\n  firebase: {\n    apiKey: \"AIzaSyD_1irJWOgT9x5fvmbXJm0fRRRZ8DNUfpU\",\n    authDomain: \"weddi-app.firebaseapp.com\",\n    databaseURL: \"https://weddi-app.firebaseio.com/\",\n    projectId: \"weddi-app\",\n    storageBucket: \"image.weddi.app\",\n    messagingSenderId: \"324415165027\",\n    appId: \"1:324415165027:web:76b8291835ef32c5c75e56\"\n  },\n  post: {\n    namespace: \"tlty\",\n  },\n  img: {\n    namespace: \"tlty\",\n    endpoint: \"https://storage.googleapis.com/image.weddi.app/\",\n    bgImgsShouldBePicked: 30,\n    fmImgsShouldBePicked: 5\n  }\n};\n\nconst YKYL_CONFIG: ConfigService.Config = {\n  doc: {\n    title: \"<3 呱呱 & 以練 <3\"\n  },\n  firebase: {\n    apiKey: \"AIzaSyD_1irJWOgT9x5fvmbXJm0fRRRZ8DNUfpU\",\n    authDomain: \"weddi-app.firebaseapp.com\",\n    databaseURL: \"https://weddi-app.firebaseio.com/\",\n    projectId: \"weddi-app\",\n    storageBucket: \"image.weddi.app\",\n    messagingSenderId: \"324415165027\",\n    appId: \"1:324415165027:web:76b8291835ef32c5c75e56\"\n  },\n  post: {\n    namespace: \"ykyl\",\n  },\n  img: {\n    namespace: \"ykyl\",\n    endpoint: \"https://storage.googleapis.com/image.weddi.app/\",\n    bgImgsShouldBePicked: 28,\n    fmImgsShouldBePicked: 5\n  }\n};\n\nconst TEST_CONFIG: ConfigService.Config = {\n  doc: {\n    title: \"<3 Groom & Bride <3\"\n  },\n  firebase: {\n    apiKey: \"AIzaSyD_1irJWOgT9x5fvmbXJm0fRRRZ8DNUfpU\",\n    authDomain: \"weddi-app.firebaseapp.com\",\n    databaseURL: \"https://weddi-app-test.firebaseio.com/\",\n    projectId: \"weddi-app\",\n    storageBucket: \"image.weddi.app\",\n    messagingSenderId: \"324415165027\",\n    appId: \"1:324415165027:web:76b8291835ef32c5c75e56\"\n  },\n  post: {\n    namespace: \"test\",\n  },\n  img: {\n    namespace: \"chyy\",\n    endpoint: \"https://storage.googleapis.com/image.weddi.app/\",\n    bgImgsShouldBePicked: 40,\n    fmImgsShouldBePicked: 5\n  }\n};\n\nconst getConfigById = (gnbId: string): ConfigService.Config => {\n  switch (gnbId) {\n    case \"chyy\":\n      return CHYY_CONFIG;\n    case \"tlty\":\n      return TLTY_CONFIG;\n    case \"ykyl\":\n      return YKYL_CONFIG;\n    default:\n      return TEST_CONFIG;\n  }\n};\n\nclass ConfigService implements ConfigServiceInterface {\n  private _config: ConfigService.Config | null = null;\n\n  public init(gnbId: string): void {\n    if (this._config === null) {\n      this._config = getConfigById(gnbId);\n    }\n  }\n\n  public get config(): ConfigService.Config {\n    if (this._config === null) {\n      throw Error(\"config is not set yet\");\n    }\n    return this._config;\n  }\n}\n\n// Singleton\nconst configService: ConfigServiceInterface = new ConfigService();\n\nexport default configService;\n","const random = (a = 1, b = 0): number => {\n  const lower = Math.ceil(Math.min(a, b));\n  const upper = Math.floor(Math.max(a, b));\n  return Math.floor(lower + Math.random() * (upper - lower + 1));\n};\n\nexport const combinationList = <T>(list: T[] , k: number): T[] => {\n  const result: T[] = [];\n  /* select k elements n-k <= i < n */\n  for (let i = list.length - k; i < list.length; i++) {\n    /* A random integer such that 0 <= j < i */\n    const j = random(i);\n    /* Select element j if element j is not selected yet */\n    /* Otherwise select element i */\n    if (result.includes(list[j])) {\n      result.push(list[i]);\n    } else {\n      result.push(list[j]);\n    }\n  }\n  return result;\n};\n\nexport const permutationList = <T>(list: T[]): T[] => {\n  for (let i = 0; i <= list.length - 2; i++) {\n    /* A random integer such that i <= j < n */\n    const j = random(i, list.length - 1);\n    /* Swap the randomly picked element with list[i] */\n    [list[i], list[j]] = [list[j], list[i]];\n  }\n  return list;\n};\n","import firebase from 'firebase/app';\n\nimport configService from '../services/configService';\n\nexport const writePost = (database: firebase.database.Database) => (postData: object): Promise<object> => {\n  const postId = database.ref(`${configService.config.post.namespace}/posts`).push().key;\n  if (!postId) {\n    throw new Error('post id is empty');\n  }\n  const wrappedPostData = {\n    ...postData,\n    modifiedTime: new Date().toISOString(),\n    userAgent: navigator.userAgent,\n    id: postId\n  };\n  return database\n    .ref(`${configService.config.post.namespace}/posts`)\n    .child(postId)\n    .set(wrappedPostData);\n};\n\nexport const onNewPost = (database: firebase.database.Database) => (callback: Function): void => {\n  const postRef = database.ref(`${configService.config.post.namespace}/posts`);\n  postRef.on('child_added', (data: firebase.database.DataSnapshot) => {\n    callback(data.val());\n  });\n};\n\nexport const listAllImages = (storage: firebase.storage.Storage) => (size: 'small' | 'regular' = 'small') => {\n  return storage.ref(configService.config.img.namespace).child(size).listAll()\n    .then(listResult => Promise.all(listResult.items.map(item => item.getDownloadURL())));\n};\n\nexport const uploadImage = (storage: firebase.storage.Storage) => (imgName: string, image: Blob): firebase.storage.UploadTask => {\n  return storage\n    .ref(configService.config.img.namespace)\n    .child('public_upload')\n    .child(imgName)\n    .put(image);\n};\n","import { createContext } from 'react';\nimport firebase from 'firebase';\n\nexport interface FirebaseContextType {\n  app: firebase.app.App;\n  database: firebase.database.Database;\n  storage: firebase.storage.Storage;\n}\n\nexport const FirebaseContext = createContext<FirebaseContextType>({} as FirebaseContextType);\n","import firebase from 'firebase/app';\nimport 'firebase/storage';\nimport 'firebase/database';\nimport React, { useMemo } from 'react';\nimport { FirebaseContext } from './context';\nexport interface Props {\n  firebaseConfig?: Record<string, any>;\n  appName?: string;\n}\n\nconst DEFAULT_APP_NAME = '[DEFAULT]';\n\nconst shallowEqual = (a: Record<string, any>, b: Record<string, any>): boolean =>\n  a === b || [...Object.keys(a), ...Object.keys(b)].every(key => a[key] === b[key]);\n\nexport const FirebaseAppProvider = (props: Props & { [key: string]: unknown }) => {\n  const { firebaseConfig, appName } = props;\n  const value = useMemo(() => {\n    if (!firebaseConfig) {\n      throw new Error('No config provided');\n    }\n    const existingApp = firebase.apps.find(app => app.name === (appName || DEFAULT_APP_NAME));\n    if (existingApp && shallowEqual(existingApp.options, firebaseConfig)) {\n      return {\n        app: existingApp,\n        storage: firebase.storage(existingApp),\n        database: firebase.database(existingApp),\n      };\n    }\n\n    const app = firebase.initializeApp(firebaseConfig, appName);\n    const storage = firebase.storage();\n    const database = firebase.database();\n    return {\n      app,\n      storage,\n      database\n    };\n  }, [firebaseConfig, appName]);\n  return (\n    <FirebaseContext.Provider value={value} {...props} />\n  );\n};\n","import { useContext } from 'react';\nimport { FirebaseContext, FirebaseContextType } from './context';\n\nexport const useDatabase = (): FirebaseContextType['database'] => {\n  return useContext(FirebaseContext).database;\n};\n\nexport const useStorage = (): FirebaseContextType['storage'] => {\n  return useContext(FirebaseContext).storage;\n};\n","import React, { useState } from 'react';\n\ninterface Props {\n  imgUrls: string[];\n  onChange?: (imgUrl: string) => void;\n  disabled?: boolean;\n}\n\nexport const ImagePicker = ({ imgUrls, onChange, disabled }: Props) => {\n  const totalImages = imgUrls.length;\n  const [pickerIndex, setPickerIndex] = useState(0);\n\n  const renderPhotoRadios = () => imgUrls.map((url, i) => {\n    const checked = pickerIndex === i;\n    return (\n      <React.Fragment key={url}>\n        <input hidden type=\"radio\" name=\"imgUrl\" value={url} checked={checked} readOnly />\n        <div className={`layer ${checked ? '' : ' hidden'}`} style={{ backgroundImage: `url(${url})` }} />\n        <img className={`fade ${checked ? '' : ' hidden'}`} src={url} alt={url} />\n      </React.Fragment>\n    );\n  });\n\n  const plusImgIdx = (i: number): void => {\n    const nextIdx = (pickerIndex + i + totalImages) % totalImages;\n\n    setPickerIndex(nextIdx);\n    if (onChange) {\n      onChange(imgUrls[nextIdx]);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <div className=\"img-window\">\n        <div className=\"numbertext\">{pickerIndex + 1} / {totalImages}</div>\n        {renderPhotoRadios()}\n      </div>\n      <span className=\"prev\" onClick={() => !disabled && plusImgIdx(-1)}>&#10094;</span>\n      <span className=\"next\" onClick={() => !disabled && plusImgIdx(1)}>&#10095;</span>\n    </React.Fragment>\n  );\n};\n","import React, { ChangeEventHandler, useState } from 'react';\nimport loadImage from 'blueimp-load-image';\n\ninterface Props {\n  disabled?: boolean;\n  onChange?: (blob: Blob | null) => void;\n}\n\nexport const ImageUploader = ({ disabled, onChange }: Props) => {\n  const [upload, setUpload] = useState<Blob | null>(null);\n\n  const onFileChangeHandler: ChangeEventHandler<HTMLInputElement> = (event): void => {\n    const target = event.target;\n    const key = event.target.name;\n    const value = target.files && target.files[0];\n    if (key && value && value.type.startsWith('image/')) {\n      loadImage(\n        value,\n        (canvas) => (canvas as HTMLCanvasElement).toBlob((blob) => {\n          setUpload(blob);\n          if(onChange) {\n            onChange(blob);\n          }\n        }, 'image/jpeg', 0.75),\n        { maxWidth: 2048, maxHeight: 2048, orientation: true, canvas: true, noRevoke: true }\n      );\n    }\n  };\n\n  return (\n    <label className=\"img-window upload\">\n      <input\n        hidden\n        type=\"file\"\n        name=\"upload\"\n        placeholder=\"上傳照片\"\n        accept=\"image/*\"\n        onChange={onFileChangeHandler}\n        disabled={disabled}\n      />\n      {upload && <img src={URL.createObjectURL(upload)} alt=\"upload preview\" />}\n      {!upload && <span className=\"upload-field\">請上傳圖片</span>}\n    </label>\n  );\n};\n","import React, { useState, ChangeEventHandler, FormEventHandler, useEffect } from 'react';\nimport uuid from 'uuid';\nimport './greeting.scss';\n\nimport configService from '../services/configService';\nimport { combinationList } from '../utils/random';\nimport loadingIcon from '../images/uploadLoading.svg';\nimport { listAllImages, uploadImage, writePost } from '../api';\nimport { useDatabase, useStorage } from '../Provider/FirebaseApp';\nimport { ImagePicker } from './ImagePicker';\nimport { ImageUploader } from './ImageUploader';\n\ninterface Props {\n  onSubmit?: (formData: {name: string; greetings: string; imgUrl: string}) => void;\n}\n\nexport const GreetingForm = ({ onSubmit }: Props) => {\n  const [isProcessing, setIsProcessing] = useState(false);\n\n  const [form, setForm] = useState({\n    name: '',\n    greetings: '',\n  });\n  const [isUploadPage, setIsUploadPage] = useState(false);\n\n  const [imgUrls, setImgUrls] = useState<string[]>([]);\n  const [pickedImg, setPickedImg] = useState('');\n  const [uploadImg, setUploadImg] = useState<Blob | null>(null);\n\n  const database = useDatabase();\n  const storage = useStorage();\n\n  useEffect(() => {\n    listAllImages(storage)().then(imageUrls => {\n      const imgCandidates = combinationList(imageUrls, configService.config.img.fmImgsShouldBePicked);\n      setImgUrls(imgCandidates);\n      setPickedImg(imgCandidates[0]);\n    });\n  }, [storage]);\n\n  const onTextChangeHandler: ChangeEventHandler<HTMLInputElement | HTMLTextAreaElement> = (event) => {\n    const key = event.target.name;\n    const value = event.target.value.trim();\n    setForm((form) => ({ ...form, [key]: value }));\n  };\n\n  const onSubmitHandler: FormEventHandler = (event) => {\n    event.preventDefault();\n    const isValid = () => {\n      const { name, greetings } = form;\n      return name.trim() !== '' && greetings.trim() !== '' && (pickedImg || uploadImg);\n    };\n    if (isValid()) {\n      const uploadFlow = async () => {\n        setIsProcessing(true);\n        let imgUrl = pickedImg;\n        if (isUploadPage && uploadImg) {\n          const imgName = uuid.v4();\n          const uploadProc = await uploadImage(storage)(imgName, uploadImg);\n          imgUrl = await uploadProc.ref.getDownloadURL();\n        }\n        await writePost(database)({\n          name: form.name,\n          greetings: form.greetings,\n          imgUrl,\n        });\n\n        setPickedImg(imgUrl);\n        setIsProcessing(false);\n\n        if (onSubmit) {\n          onSubmit({\n            name: form.name,\n            greetings: form.greetings,\n            imgUrl\n          });\n        }\n      };\n      return uploadFlow();\n    }\n  };\n\n  const onPickerClick = () => {\n    if (!isProcessing) {\n      setIsUploadPage(false);\n    }\n  };\n\n  const onPickerChange = (imgUrl: string) => {\n    setPickedImg(imgUrl);\n  };\n\n  const onUploaderClick = () => {\n    if (!isProcessing) {\n      setIsUploadPage(true);\n    }\n  };\n\n  const onUploaderChange = (blob: Blob | null) => {\n    setUploadImg(blob);\n  };\n\n  return (\n    <form className=\"greeting-form\" onSubmit={onSubmitHandler}>\n      <ul className=\"tabs-view\">\n        <li\n          className={`pick ${isUploadPage ? '' : 'active'}`}\n          onClick={onPickerClick}\n        >\n          挑一張照片\n        </li>\n        <li\n          className={`pick ${isUploadPage ? 'active' : ''}`}\n          onClick={onUploaderClick}\n        >\n          上傳一張照片\n        </li>\n      </ul>\n      <div className=\"slideshow-container\">\n        <div hidden={!isUploadPage}>\n          <ImageUploader disabled={isProcessing} onChange={onUploaderChange} />\n        </div>\n        <div hidden={isUploadPage}>\n          <ImagePicker disabled={isProcessing} imgUrls={imgUrls} onChange={onPickerChange} />\n        </div>\n      </div>\n      <div className=\"greeting-message-block\">\n        <label className=\"input\">\n          <h2>@</h2>\n          <input type=\"text\" name=\"name\" placeholder=\"姓名\" onChange={onTextChangeHandler} required disabled={isProcessing} />\n        </label>\n        <label className=\"input\">\n          <textarea name=\"greetings\" placeholder=\"祝賀詞\" onChange={onTextChangeHandler} required disabled={isProcessing} />\n        </label>\n      </div>\n      <button className=\"btn\" type=\"submit\" disabled={isProcessing}>\n        {isProcessing && <img className=\"loading-img\" src={loadingIcon} alt=\"\" />}\n        留言\n      </button>\n    </form>\n  );\n};\n","import React, { useState, useEffect, useRef } from 'react';\nimport './board.scss';\n\nconst Dialog = ({ user, show }) => {\n  const [loading, setLoading] = useState(false);\n  const imgRef = useRef();\n\n  useEffect(() => {\n    // while image url changes set to loading\n    if (user.imgUrl) {\n      setLoading(true);\n    }\n  }, [user.imgUrl]);\n\n  const onLoad = () => {\n    setLoading(false);\n  };\n\n  const mayMobile = window.innerWidth < 1000;\n  const verticalImg = !loading && imgRef.current && imgRef.current.clientWidth < imgRef.current.clientHeight;\n  const modalStyle = (!loading && mayMobile && verticalImg) ? { margin: '10% 20% 50px' } : {};\n\n  return (\n    <div className={`dialog ${show && !loading ? \"show-dialog\" : \"\"}`}>\n      <div className=\"modal-sm\" style={modalStyle}>\n        <div className=\"image-container\">\n          <img ref={imgRef} className=\"user-image\" src={user.imgUrl} alt=\"images\" onLoad={onLoad} />\n        </div>\n        <div className=\"message\">\n          <h2>@ {user.name}</h2>\n          <p>{user.greetings}</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Dialog;\n","import React, { useState } from 'react';\nimport './greeting.scss';\n\nimport { GreetingForm } from './GreetingForm';\nimport Dialog from '../Board/Dialog';\n\nconst Greeting = (props) => {\n  const [modalDisplay, setModalDisplay] = useState(false);\n  const getUpperUrl = () => {\n    const matchUrl = props.match.url;\n    const paths = matchUrl.split('/');\n    paths.pop();\n    return paths.join('/');\n  };\n\n  const [user, setUser] = useState({ name: '', greetings: '', imgUrl: '' });\n  const onSubmit = (formData) => {\n    setUser(formData);\n    setModalDisplay(true);\n    setTimeout(() => { props.history.push(getUpperUrl()); }, 5000);\n  };\n\n  return (\n    <div className=\"greeting\">\n      <header className=\"greeting-header\">\n        <h1 className=\"greeting-title orange-font\">祝福留言版</h1>\n      </header>\n      {!modalDisplay && <GreetingForm onSubmit={onSubmit} />}\n      {!modalDisplay && <a className=\"link orange-font\" href={getUpperUrl()}>去照片牆瞧瞧</a>}\n      <Dialog user={user} show={modalDisplay} />\n    </div>\n  );\n};\n\nexport default Greeting;\n","export const preloadImage = (url: string, callback: (img: HTMLImageElement) => void): void => {\n  const img = new Image();\n  img.src = url;\n  img.onload = (): void => callback(img);\n};\n\nexport const preloadImageAsync = (url: string): Promise<HTMLImageElement> => {\n  return new Promise(resolve => {\n    preloadImage(url, resolve);\n  });\n};\n","export interface QueueInterface<T> {\n  push: (element: T) => void;\n  pop: () => T;\n  isEmpty: () => boolean;\n}\n\nexport default class Queue<T = any> implements QueueInterface<T> {\n  private q: T[];\n  public constructor() {\n    this.q = [];\n  }\n\n  public push(element: T): void {\n    this.q.push(element);\n  }\n\n  public pop(): T {\n    const result = this.q.splice(0, 1)[0];\n    return result;\n  }\n\n  public isEmpty(): boolean {\n    return this.q.length === 0;\n  }\n}\n","import React, { useState, useEffect } from 'react';\nimport './board.scss';\nimport Dialog from './Dialog';\nimport { Background } from './Background';\n\nimport Queue from './queue';\n\nimport { onNewPost } from '../api';\nimport { useDatabase } from '../Provider/FirebaseApp';\n\nconst subscribePost = (database) => (listener) => {\n  const newFeeds = new Queue();\n  const oldFeeds = new Queue();\n\n  onNewPost(database)((feed) => newFeeds.push(feed));\n\n  const interval = setInterval(() => {\n    const nextFeed = newFeeds.isEmpty() ? oldFeeds.pop() : newFeeds.pop();\n    if (nextFeed) {\n      oldFeeds.push(nextFeed);\n    }\n    listener(nextFeed);\n  }, 8000);\n\n  const unsubscribe = () => {\n    clearInterval(interval);\n    // TODO: unsub API\n  };\n  return unsubscribe;\n};\n\nconst Board = (props) => {\n  const [modalDisplay, setModalDisplay] = useState(false);\n  const [user, setUser] = useState({});\n  const database = useDatabase();\n\n  useEffect(() => {\n    // subscribe post while component did mount\n    const unsubscribe = subscribePost(database)((user) => {\n      if (user) {\n        setUser(user);\n        const displayAndHide = () => {\n          setModalDisplay(true);\n\n          setTimeout(() => {\n            setModalDisplay(false);\n          }, 5000);\n        };\n        displayAndHide();\n      }\n    });\n    return () => {\n      // unsubscribe post while component will unmount\n      unsubscribe();\n    };\n  }, [database]);\n\n  return (\n    <React.Fragment>\n      <Background />\n      <Dialog user={user} show={modalDisplay} />\n      <a className=\"message-link\" href={`${props.match.url}/greetings`}>&lt;&lt; 留下你的祝福</a>\n    </React.Fragment>\n  );\n};\n\nexport default Board;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Greeting from './Greeting';\nimport Board from './Board';\nimport configService from './services/configService';\nimport { FirebaseAppProvider } from './Provider/FirebaseApp';\n\nconst setTitle = (title) => document.title = title;\n\nconst App = ({ match }) => {\n  configService.init(match.params.gnbId);\n  setTitle(configService.config.doc.title);\n  const path = match.url;\n  return (\n    <FirebaseAppProvider firebaseConfig={configService.config.firebase}>\n      <Switch>\n        <Route path={`${path}/greetings`} component={Greeting} />\n        <Route path={path} component={Board} />\n      </Switch>\n    </FirebaseAppProvider>\n  );\n};\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nconst Home = () => (<div>Weddi App</div>);\n\nconst Root = () => {\n  return (\n    <Router basename={process.env.PUBLIC_URL} forceRefresh>\n      <Switch>\n        <Route path=\"/:gnbId/\" component={App} />\n        <Route path=\"/\" component={Home} />\n      </Switch>\n    </Router>\n  );\n};\n\nReactDOM.render(<Root />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}