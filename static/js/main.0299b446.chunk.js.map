{"version":3,"sources":["images/uploadLoading.svg","images/loading.gif","Board/Background.tsx","Provider/FirebaseApp/context.ts","Provider/FirebaseApp/provider.tsx","Provider/FirebaseApp/useHooks.ts","services/configService.ts","utils/random.ts","api/index.ts","Greeting/ImagePicker.tsx","Greeting/ImageUploader.tsx","Greeting/GreetingForm.tsx","Board/Dialog.js","utils/urlHelpers.ts","Greeting/Greeting.tsx","images/preloadImage.ts","Board/subscribePost.ts","utils/priorityQueue.ts","utils/estimateReadingTime.ts","Board/index.tsx","Lottery/Lottery.tsx","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","BG_STATE","FirebaseContext","createContext","FirebaseAppProvider","props","firebaseConfig","appName","value","useMemo","Error","a","b","existingApp","getApps","find","app","name","options","Object","keys","every","key","storage","getStorage","database","getDatabase","analytics","getAnalytics","initializeApp","Provider","useDatabase","useContext","useStorage","useAnalytics","CHYY_CONFIG","doc","title","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","post","namespace","img","bgImgsShouldBePicked","fmImgsShouldBePicked","TLTY_CONFIG","YKYL_CONFIG","TEST_CONFIG","configService","_config","gnbId","this","getConfigById","random","lower","Math","ceil","min","upper","floor","max","combinationList","list","k","result","i","length","j","includes","push","permutationList","listPosts","joinedGame","postRef","databaseRef","config","query","orderByChild","equalTo","Promise","resolve","onValue","snapshot","val","onlyOnce","writePost","postData","postId","wrappedPostData","modifiedTime","Date","toISOString","userAgent","navigator","id","set","listImageRefs","size","listAll","storageRef","then","listResult","items","listRandomKImages","imageRefs","kImageRefs","all","map","getDownloadURL","uploadImage","imgName","image","uploadBytes","ref","ImagePicker","imgUrls","onChange","disabled","totalImages","useState","pickerIndex","setPickerIndex","plusImgIdx","nextIdx","Fragment","className","url","checked","hidden","type","readOnly","style","backgroundImage","src","alt","onClick","ImageUploader","upload","setUpload","placeholder","accept","event","target","files","startsWith","loadImage","canvas","toBlob","blob","maxWidth","maxHeight","orientation","noRevoke","URL","createObjectURL","GreetingForm","onSubmit","isProcessing","setIsProcessing","greetings","form","setForm","isUploadPage","setIsUploadPage","setImgUrls","pickedImg","setPickedImg","uploadImg","setUploadImg","useEffect","onTextChangeHandler","trim","preventDefault","isValid","imgUrl","uuid","v4","input","uploadFlow","required","loadingIcon","Dialog","user","show","loading","setLoading","imgRef","useRef","mayMobile","window","innerWidth","verticalImg","current","clientWidth","clientHeight","modalStyle","margin","onLoad","getUpperUrl","matchUrl","paths","split","pop","join","Greeting","logEvent","modalDisplay","setModalDisplay","setUser","useCallback","formData","setTimeout","history","match","href","preloadImageAsync","callback","Image","onload","preloadImage","Background","isLoading","setIsLoading","BG_HIDDEN","bgState","setBgState","permutation","setPermutation","BG_FADE_OUT","BG_FADE_IN","BG_VISIBLE","bgImgUrl","newHeapNode","priority","timestampId","heap","lessFn","half","n","less","array","idx1","idx2","swap","heapify","idx","currentIdx","leftChildIdx","rightChildIdx","childIdx","init","element","parentIdx","newHeap","node1","node2","subscribePost","postsPool","feeds","posts","forEach","onChildAdded","onNewPost","unsubscribe","next","nextFeed","CharactersPerMin","default","Arabic","Chinese","Dutch","English","Finnish","French","German","Hebrew","Italian","Japanese","Polish","Portuguese","Russian","Slovenian","Spanish","Swedish","Turkish","Stage","Board","openModalAndClose","onClose","timeout","setPost","getNextPost","paragraph","newPost","estimatedSecond","guessLanguage","languageName","readingSpeedCharPerMin","second","Lottery","setPosts","Init","stage","setStage","postsDictionary","shuffledPosts","Loaded","isExpanding","setIsExpanding","isShuffling","setIsShuffling","revealedIds","setRevealedIds","onToggleFlipAll","ids","onFlipOne","index","onToggleExpand","expanding","onToggleShuffle","clearTimeout","Start","Flipped","Stacked","Shuffled","Shuffling","Ready","onGoBtnClick","onResetBtnClick","allCards","sqrt","stacks","cards","splice","App","params","document","path","component","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","Home","Root","basename","process","forceRefresh","ReactDOM","render","getElementById","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.0299b446.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/uploadLoading.a33612b2.svg\";","module.exports = __webpack_public_path__ + \"static/media/loading.822699a4.gif\";","import React, { useState, useEffect } from 'react';\nimport loadingIcon from '../images/loading.gif';\nimport './board.scss';\n\nimport { useStorage } from '../Provider/FirebaseApp';\nimport configService from '../services/configService';\nimport { listRandomKImages } from '../api';\nimport { permutationList } from '../utils/random';\nimport { preloadImageAsync } from '../images/preloadImage';\n\nconst TIME_FADE_OUT = 1000;\nconst TIME_FADE_IN = 1000;\nconst TIME_HIDDEN = 1500;\nconst TIME_UPDATE_BACKGROUND = 30 * 60 * 1000;\n\nenum BG_STATE {\n  BG_FADE_IN = 'BG_FADE_IN',\n  BG_FADE_OUT = 'BG_FADE_OUT',\n  BG_HIDDEN = 'BG_HIDDEN',\n  BG_VISIBLE = 'BG_VISIBLE',\n}\n\nexport const Background = () => {\n  const storage = useStorage();\n  const [isLoading, setIsLoading] = useState(true);\n  const [bgState, setBgState] = useState(BG_STATE.BG_HIDDEN);\n  const [permutation, setPermutation] = useState<string[]>([]);\n\n  useEffect(() => {\n    if (isLoading) {\n      listRandomKImages(storage, configService.config.img.bgImgsShouldBePicked).then(imgUrls => {\n        Promise.all(imgUrls.map(preloadImageAsync)).then(() => setIsLoading(false));\n        setPermutation(permutationList(imgUrls));\n      });\n    }\n  }, [storage, isLoading]);\n\n  useEffect(() => {\n    switch(bgState) {\n      case BG_STATE.BG_FADE_OUT: {\n        setTimeout(() => {\n          setBgState(BG_STATE.BG_HIDDEN);\n          setPermutation((permutation) => permutationList(permutation));\n        }, TIME_FADE_OUT);\n        break;\n      }\n      case BG_STATE.BG_HIDDEN: {\n        setTimeout(() => {\n          setBgState(BG_STATE.BG_FADE_IN);\n        }, TIME_HIDDEN);\n        break;\n      }\n      case BG_STATE.BG_FADE_IN: {\n        setTimeout(() => {\n          setBgState(BG_STATE.BG_VISIBLE);\n        }, TIME_FADE_IN);\n        break;\n      }\n      case BG_STATE.BG_VISIBLE: {\n        setTimeout(() => {\n          setBgState(BG_STATE.BG_FADE_OUT);\n        }, TIME_UPDATE_BACKGROUND);\n        break;\n      }\n      default: {\n        break;\n      }\n    }\n  }, [bgState]);\n\n  return (\n    <div className=\"container\">\n      {\n        isLoading && (\n          <div className=\"loading\">\n            <img src={loadingIcon} alt=\"\" />\n            <span>Loading...</span>\n          </div>\n        )\n      }\n      {\n        permutation.map((bgImgUrl) =>\n          <img\n            key={bgImgUrl}\n            className={\n              isLoading || bgState === BG_STATE.BG_HIDDEN ? 'hidden' :\n                bgState === BG_STATE.BG_VISIBLE ? 'visible' :\n                  bgState === BG_STATE.BG_FADE_IN ? 'fade-in' :\n                    bgState === BG_STATE.BG_FADE_OUT ? 'fade-out' :\n                      ''\n            }\n            src={bgImgUrl}\n            alt=\"\"\n          />\n        )\n      }\n    </div>\n  );\n};\n","import { createContext } from 'react';\nimport { FirebaseApp } from 'firebase/app';\nimport { FirebaseStorage } from 'firebase/storage';\nimport { Database } from 'firebase/database';\nimport { Analytics } from 'firebase/analytics';\n\nexport interface FirebaseContextType {\n  app: FirebaseApp;\n  database: Database;\n  storage: FirebaseStorage;\n  analytics: Analytics;\n}\n\nexport const FirebaseContext = createContext<FirebaseContextType>({} as FirebaseContextType);\n","import { getApps, initializeApp } from 'firebase/app';\nimport { getStorage } from 'firebase/storage';\nimport { getDatabase } from 'firebase/database';\nimport { getAnalytics } from 'firebase/analytics';\nimport React, { useMemo } from 'react';\nimport { FirebaseContext } from './context';\nexport interface Props {\n  firebaseConfig?: Record<string, any>;\n  appName?: string;\n}\n\nconst DEFAULT_APP_NAME = '[DEFAULT]';\n\nconst shallowEqual = (a: Record<string, any>, b: Record<string, any>): boolean =>\n  a === b || [...Object.keys(a), ...Object.keys(b)].every(key => a[key] === b[key]);\n\nexport const FirebaseAppProvider = (props: Props & { [key: string]: unknown }) => {\n  const { firebaseConfig, appName } = props;\n  const value = useMemo(() => {\n    if (!firebaseConfig) {\n      throw new Error('No config provided');\n    }\n    const existingApp = getApps().find(app => app.name === (appName || DEFAULT_APP_NAME));\n    if (existingApp && shallowEqual(existingApp.options, firebaseConfig)) {\n      return {\n        app: existingApp,\n        storage: getStorage(existingApp),\n        database: getDatabase(existingApp),\n        analytics: getAnalytics(existingApp),\n      };\n    }\n\n    const app = initializeApp(firebaseConfig, appName);\n    const storage = getStorage(app);\n    const database = getDatabase(app);\n    const analytics = getAnalytics(app);\n    return {\n      app,\n      storage,\n      database,\n      analytics,\n    };\n  }, [firebaseConfig, appName]);\n  return (\n    <FirebaseContext.Provider value={value} {...props} />\n  );\n};\n","import { useContext } from 'react';\nimport { FirebaseContext, FirebaseContextType } from './context';\n\nexport const useDatabase = (): FirebaseContextType['database'] => {\n  return useContext(FirebaseContext).database;\n};\n\nexport const useStorage = (): FirebaseContextType['storage'] => {\n  return useContext(FirebaseContext).storage;\n};\n\nexport const useAnalytics = (): FirebaseContextType['analytics'] => {\n  return useContext(FirebaseContext).analytics;\n};\n","const CHYY_CONFIG: ConfigService.Config = {\n  doc: {\n    title: \"<3 YaYun & ChinHui <3\"\n  },\n  firebase: {\n    apiKey: \"AIzaSyD_1irJWOgT9x5fvmbXJm0fRRRZ8DNUfpU\",\n    authDomain: \"weddi-app.firebaseapp.com\",\n    databaseURL: \"https://weddi-app.firebaseio.com/\",\n    projectId: \"weddi-app\",\n    storageBucket: \"image.weddi.app\",\n    messagingSenderId: \"324415165027\",\n    appId: \"1:324415165027:web:76b8291835ef32c5c75e56\",\n    measurementId: \"G-SD1QTLYR15\",\n  },\n  post: {\n    namespace: \"chyy\",\n  },\n  img: {\n    namespace: \"chyy\",\n    bgImgsShouldBePicked: 40,\n    fmImgsShouldBePicked: 5\n  }\n};\n\nconst TLTY_CONFIG: ConfigService.Config = {\n  doc: {\n    title: \"<3 Tony & Claire <3\"\n  },\n  firebase: {\n    apiKey: \"AIzaSyD_1irJWOgT9x5fvmbXJm0fRRRZ8DNUfpU\",\n    authDomain: \"weddi-app.firebaseapp.com\",\n    databaseURL: \"https://weddi-app.firebaseio.com/\",\n    projectId: \"weddi-app\",\n    storageBucket: \"image.weddi.app\",\n    messagingSenderId: \"324415165027\",\n    appId: \"1:324415165027:web:76b8291835ef32c5c75e56\",\n    measurementId: \"G-SD1QTLYR15\",\n  },\n  post: {\n    namespace: \"tlty\",\n  },\n  img: {\n    namespace: \"tlty\",\n    bgImgsShouldBePicked: 30,\n    fmImgsShouldBePicked: 5\n  }\n};\n\nconst YKYL_CONFIG: ConfigService.Config = {\n  doc: {\n    title: \"<3 呱呱 & 以練 <3\"\n  },\n  firebase: {\n    apiKey: \"AIzaSyD_1irJWOgT9x5fvmbXJm0fRRRZ8DNUfpU\",\n    authDomain: \"weddi-app.firebaseapp.com\",\n    databaseURL: \"https://weddi-app.firebaseio.com/\",\n    projectId: \"weddi-app\",\n    storageBucket: \"image.weddi.app\",\n    messagingSenderId: \"324415165027\",\n    appId: \"1:324415165027:web:76b8291835ef32c5c75e56\",\n    measurementId: \"G-SD1QTLYR15\",\n  },\n  post: {\n    namespace: \"ykyl\",\n  },\n  img: {\n    namespace: \"ykyl\",\n    bgImgsShouldBePicked: 28,\n    fmImgsShouldBePicked: 5\n  }\n};\n\nconst TEST_CONFIG: ConfigService.Config = {\n  doc: {\n    title: \"<3 Groom & Bride <3\"\n  },\n  firebase: {\n    apiKey: \"AIzaSyD_1irJWOgT9x5fvmbXJm0fRRRZ8DNUfpU\",\n    authDomain: \"weddi-app.firebaseapp.com\",\n    databaseURL: \"https://weddi-app.firebaseio.com/\",\n    projectId: \"weddi-app\",\n    storageBucket: \"image.weddi.app\",\n    messagingSenderId: \"324415165027\",\n    appId: \"1:324415165027:web:76b8291835ef32c5c75e56\",\n    measurementId: \"G-SD1QTLYR15\",\n  },\n  post: {\n    namespace: \"test\",\n  },\n  img: {\n    namespace: \"chyy\",\n    bgImgsShouldBePicked: 40,\n    fmImgsShouldBePicked: 5\n  }\n};\n\nconst getConfigById = (gnbId: string): ConfigService.Config => {\n  switch (gnbId) {\n    case \"chyy\":\n      return CHYY_CONFIG;\n    case \"tlty\":\n      return TLTY_CONFIG;\n    case \"ykyl\":\n      return YKYL_CONFIG;\n    default:\n      return TEST_CONFIG;\n  }\n};\n\nclass ConfigService implements ConfigServiceInterface {\n  private _config: ConfigService.Config | null = null;\n\n  public init(gnbId: string): void {\n    if (this._config === null) {\n      this._config = getConfigById(gnbId);\n    }\n  }\n\n  public get config(): ConfigService.Config {\n    if (this._config === null) {\n      throw Error(\"config is not set yet\");\n    }\n    return this._config;\n  }\n}\n\n// Singleton\nconst configService: ConfigServiceInterface = new ConfigService();\n\nexport default configService;\n","const random = (a = 1, b = 0): number => {\n  const lower = Math.ceil(Math.min(a, b));\n  const upper = Math.floor(Math.max(a, b));\n  return Math.floor(lower + Math.random() * (upper - lower + 1));\n};\n\nexport const combinationList = <T>(list: T[] , k: number): T[] => {\n  const result: T[] = [];\n  /* select k elements n-k <= i < n */\n  for (let i = list.length - k; i < list.length; i++) {\n    /* A random integer such that 0 <= j < i */\n    const j = random(i);\n    /* Select element j if element j is not selected yet */\n    /* Otherwise select element i */\n    if (result.includes(list[j])) {\n      result.push(list[i]);\n    } else {\n      result.push(list[j]);\n    }\n  }\n  return result;\n};\n\nexport const permutationList = <T>(list: T[]): T[] => {\n  for (let i = 0; i <= list.length - 2; i++) {\n    /* A random integer such that i <= j < n */\n    const j = random(i, list.length - 1);\n    /* Swap the randomly picked element with list[i] */\n    [list[i], list[j]] = [list[j], list[i]];\n  }\n  return list;\n};\n","import {\n  Database, Query,\n  ref as databaseRef,\n  set,\n  push,\n  query,\n  orderByChild,\n  equalTo,\n  onValue,\n  onChildAdded,\n} from 'firebase/database';\nimport {\n  FirebaseStorage,\n  ref as storageRef,\n  uploadBytes,\n  listAll,\n  getDownloadURL,\n  StorageReference,\n} from 'firebase/storage';\n\nimport configService from '../services/configService';\nimport { combinationList } from '../utils/random';\n\ninterface ListPostsOptions {\n  readonly joinedGame?: boolean;\n}\n\nexport const listPosts = (\n  database: Database,\n  options: ListPostsOptions = { joinedGame: false },\n): Promise<{[id: string]: WeddiApp.Post.Data} | null> => {\n  let postRef: Query = databaseRef(database, `${configService.config.post.namespace}/posts`);\n  const joinedGame = options.joinedGame ?? false;\n  if (joinedGame) {\n    postRef = query(postRef, orderByChild('joinedGame'), equalTo(true));\n  }\n  return new Promise(resolve =>\n    onValue(postRef, (snapshot => {\n      resolve(snapshot.val());\n    }), { onlyOnce: true }));\n};\n\nexport const writePost = (database: Database, postData: WeddiApp.Post.UserInput): Promise<void> => {\n  const postId = push(databaseRef(database, `${configService.config.post.namespace}/posts`)).key;\n  if (!postId) {\n    throw new Error('post id is empty');\n  }\n  const wrappedPostData: WeddiApp.Post.Data = {\n    ...postData,\n    modifiedTime: new Date().toISOString(),\n    userAgent: navigator.userAgent,\n    id: postId\n  };\n  return set(databaseRef(database, `${configService.config.post.namespace}/posts/${postId}`), wrappedPostData);\n};\n\nexport const onNewPost = (database: Database, callback: (post: WeddiApp.Post.Data) => any): void => {\n  const postRef = databaseRef(database, `${configService.config.post.namespace}/posts`);\n  onChildAdded(postRef, (snapshot => {\n    callback(snapshot.val());\n  }));\n};\n\ninterface ListImagesOptions {\n  readonly size?: 'small' | 'regular';\n}\n\nexport const listImageRefs = (storage: FirebaseStorage, options: ListImagesOptions = { size: 'small' }): Promise<StorageReference[]> => {\n  const size = options.size ?? 'small';\n  return listAll(storageRef(storage, `${configService.config.img.namespace}/${size}`))\n    .then(listResult => listResult.items);\n};\n\nexport const listRandomKImages = async (storage: FirebaseStorage, k: number, options?: ListImagesOptions): Promise<string[]> => {\n  const imageRefs = await listImageRefs(storage, options);\n  const kImageRefs = combinationList(imageRefs, k);\n  return Promise.all(kImageRefs.map(getDownloadURL));\n};\n\nexport const uploadImage = (storage: FirebaseStorage, imgName: string, image: Blob): Promise<string> => {\n  return uploadBytes(storageRef(storage, `${configService.config.img.namespace}/public_upload/${imgName}`), image)\n    .then(result => getDownloadURL(result.ref));\n};\n","import React, { useState } from 'react';\n\ninterface Props {\n  imgUrls: string[];\n  onChange?: (imgUrl: string) => void;\n  disabled?: boolean;\n}\n\nexport const ImagePicker = ({ imgUrls, onChange, disabled }: Props) => {\n  const totalImages = imgUrls.length;\n  const [pickerIndex, setPickerIndex] = useState(0);\n\n  const renderPhotoRadios = () => imgUrls.map((url, i) => {\n    const checked = pickerIndex === i;\n    return (\n      <React.Fragment key={url}>\n        <input hidden type=\"radio\" name=\"imgUrl\" value={url} checked={checked} readOnly />\n        <div className={`layer ${checked ? '' : ' hidden'}`} style={{ backgroundImage: `url(${url})` }} />\n        <img className={`fade ${checked ? '' : ' hidden'}`} src={url} alt={url} />\n      </React.Fragment>\n    );\n  });\n\n  const plusImgIdx = (i: number): void => {\n    const nextIdx = (pickerIndex + i + totalImages) % totalImages;\n\n    setPickerIndex(nextIdx);\n    if (onChange) {\n      onChange(imgUrls[nextIdx]);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <div className=\"img-window\">\n        <div className=\"numbertext\">{pickerIndex + 1} / {totalImages}</div>\n        {renderPhotoRadios()}\n      </div>\n      <span className=\"prev\" onClick={() => !disabled && plusImgIdx(-1)}>&#10094;</span>\n      <span className=\"next\" onClick={() => !disabled && plusImgIdx(1)}>&#10095;</span>\n    </React.Fragment>\n  );\n};\n","import React, { ChangeEventHandler, useState } from 'react';\nimport loadImage from 'blueimp-load-image';\n\ninterface Props {\n  disabled?: boolean;\n  onChange?: (blob: Blob | null) => void;\n}\n\nexport const ImageUploader = ({ disabled, onChange }: Props) => {\n  const [upload, setUpload] = useState<Blob | null>(null);\n\n  const onFileChangeHandler: ChangeEventHandler<HTMLInputElement> = (event): void => {\n    const target = event.target;\n    const key = event.target.name;\n    const value = target.files && target.files[0];\n    if (key && value && value.type.startsWith('image/')) {\n      loadImage(\n        value,\n        (canvas) => (canvas as HTMLCanvasElement).toBlob((blob) => {\n          setUpload(blob);\n          if(onChange) {\n            onChange(blob);\n          }\n        }, 'image/jpeg', 0.75),\n        { maxWidth: 2048, maxHeight: 2048, orientation: true, canvas: true, noRevoke: true }\n      );\n    }\n  };\n\n  return (\n    <label className=\"img-window upload\">\n      <input\n        hidden\n        type=\"file\"\n        name=\"upload\"\n        placeholder=\"上傳照片\"\n        accept=\"image/*\"\n        onChange={onFileChangeHandler}\n        disabled={disabled}\n      />\n      {upload && <img src={URL.createObjectURL(upload)} alt=\"upload preview\" />}\n      {!upload && <span className=\"upload-field\">請上傳圖片</span>}\n    </label>\n  );\n};\n","import React, { useState, ChangeEventHandler, FormEventHandler, useEffect } from 'react';\nimport uuid from 'uuid';\nimport loadingIcon from '../images/uploadLoading.svg';\nimport './greeting.scss';\n\nimport { useDatabase, useStorage } from '../Provider/FirebaseApp';\nimport { listRandomKImages, uploadImage, writePost } from '../api';\nimport configService from '../services/configService';\nimport { ImagePicker } from './ImagePicker';\nimport { ImageUploader } from './ImageUploader';\n\ninterface Props {\n  onSubmit?: (formData: WeddiApp.Post.UserInput) => void;\n}\n\nexport const GreetingForm: React.FC<Props> = ({ onSubmit }) => {\n  const [isProcessing, setIsProcessing] = useState(false);\n\n  const [form, setForm] = useState({\n    name: '',\n    greetings: '',\n  });\n  const [isUploadPage, setIsUploadPage] = useState(false);\n\n  const [imgUrls, setImgUrls] = useState<string[]>([]);\n  const [pickedImg, setPickedImg] = useState('');\n  const [uploadImg, setUploadImg] = useState<Blob | null>(null);\n\n  const database = useDatabase();\n  const storage = useStorage();\n\n  useEffect(() => {\n    listRandomKImages(storage, configService.config.img.fmImgsShouldBePicked).then(imgUrls => {\n      setImgUrls(imgUrls);\n      setPickedImg(imgUrls[0]);\n    });\n  }, [storage]);\n\n  const onTextChangeHandler: ChangeEventHandler<HTMLInputElement | HTMLTextAreaElement> = (event) => {\n    const key = event.target.name;\n    const value = event.target.value.trim();\n    setForm((form) => ({ ...form, [key]: value }));\n  };\n\n  const onSubmitHandler: FormEventHandler = (event) => {\n    event.preventDefault();\n    const isValid = () => {\n      const { name, greetings } = form;\n      return name.trim() !== '' && greetings.trim() !== '' && (pickedImg || uploadImg);\n    };\n    if (isValid()) {\n      const uploadFlow = async () => {\n        setIsProcessing(true);\n        let imgUrl = pickedImg;\n        if (isUploadPage && uploadImg) {\n          const imgName = uuid.v4();\n          imgUrl = await uploadImage(storage, imgName, uploadImg);\n        }\n\n        const input: WeddiApp.Post.UserInput = {\n          name: form.name,\n          greetings: form.greetings,\n          joinedGame: true,\n          imgUrl,\n        };\n\n        await writePost(database, input);\n\n        setPickedImg(imgUrl);\n        setIsProcessing(false);\n\n        if (onSubmit) {\n          onSubmit(input);\n        }\n      };\n      return uploadFlow();\n    }\n  };\n\n  const onPickerClick = () => {\n    if (!isProcessing) {\n      setIsUploadPage(false);\n    }\n  };\n\n  const onPickerChange = (imgUrl: string) => {\n    setPickedImg(imgUrl);\n  };\n\n  const onUploaderClick = () => {\n    if (!isProcessing) {\n      setIsUploadPage(true);\n    }\n  };\n\n  const onUploaderChange = (blob: Blob | null) => {\n    setUploadImg(blob);\n  };\n\n  return (\n    <form className=\"greeting-form\" onSubmit={onSubmitHandler}>\n      <ul className=\"tabs-view\">\n        <li\n          className={`pick ${isUploadPage ? '' : 'active'}`}\n          onClick={onPickerClick}\n        >\n          挑一張照片\n        </li>\n        <li\n          className={`pick ${isUploadPage ? 'active' : ''}`}\n          onClick={onUploaderClick}\n        >\n          上傳一張照片\n        </li>\n      </ul>\n      <div className=\"slideshow-container\">\n        <div hidden={!isUploadPage}>\n          <ImageUploader disabled={isProcessing} onChange={onUploaderChange} />\n        </div>\n        <div hidden={isUploadPage}>\n          <ImagePicker disabled={isProcessing} imgUrls={imgUrls} onChange={onPickerChange} />\n        </div>\n      </div>\n      <div className=\"greeting-message-block\">\n        <label className=\"input\">\n          <h2>From</h2>\n          <input type=\"text\" name=\"name\" placeholder=\"你的姓名/綽號\" onChange={onTextChangeHandler} required disabled={isProcessing} />\n        </label>\n        <label className=\"input\">\n          <textarea name=\"greetings\" placeholder=\"祝賀詞\" onChange={onTextChangeHandler} required disabled={isProcessing} />\n        </label>\n      </div>\n      <button className=\"btn\" type=\"submit\" disabled={isProcessing}>\n        {isProcessing && <img className=\"loading-img\" src={loadingIcon} alt=\"\" />}\n        留言\n      </button>\n    </form>\n  );\n};\n","import React, { useState, useEffect, useRef } from 'react';\nimport './board.scss';\n\nconst Dialog = ({ user, show }) => {\n  const [loading, setLoading] = useState(false);\n  const imgRef = useRef();\n\n  useEffect(() => {\n    // while image url changes set to loading\n    if (user.imgUrl) {\n      setLoading(true);\n    }\n  }, [user.imgUrl]);\n\n  const onLoad = () => {\n    setLoading(false);\n  };\n\n  const mayMobile = window.innerWidth < 1000;\n  const verticalImg = !loading && imgRef.current && imgRef.current.clientWidth < imgRef.current.clientHeight;\n  const modalStyle = (!loading && mayMobile && verticalImg) ? { margin: '10% 20% 50px' } : {};\n\n  return (\n    <div className={`dialog ${show && !loading ? \"show-dialog\" : \"\"}`}>\n      <div className=\"modal-sm\" style={modalStyle}>\n        <div className=\"image-container\">\n          <img ref={imgRef} className=\"user-image\" src={user.imgUrl} alt=\"images\" onLoad={onLoad} />\n        </div>\n        <div className=\"message\">\n          <h2>From {user.name}:</h2>\n          <p>{user.greetings}</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Dialog;\n","export const getUpperUrl = (matchUrl: string): string => {\n  const paths = matchUrl.split('/');\n  paths.pop();\n  return paths.join('/');\n};\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { logEvent } from 'firebase/analytics';\nimport './greeting.scss';\n\nimport { useAnalytics } from '../Provider/FirebaseApp';\nimport { GreetingForm } from './GreetingForm';\nimport Dialog from '../Board/Dialog';\nimport { getUpperUrl } from '../utils/urlHelpers';\n\nexport const Greeting: React.FC<RouteComponentProps> = (props) => {\n  // TODO: remove this and find a proper filter way on GA\n  const analytics = useAnalytics();\n  useEffect(() => {\n    logEvent(analytics, 'greeting_page_landed');\n  }, [analytics]);\n\n  const [modalDisplay, setModalDisplay] = useState(false);\n\n  const [user, setUser] = useState({ name: '', greetings: '', imgUrl: '' });\n  const onSubmit = useCallback((formData: WeddiApp.Post.UserInput) => {\n    setUser(formData);\n    setModalDisplay(true);\n    setTimeout(() => { props.history.push(getUpperUrl(props.match.url)); }, 5000);\n  }, [setUser, setModalDisplay, props.history, props.match.url]);\n\n  return (\n    <div className=\"greeting\">\n      <header className=\"greeting-header\">\n        <h1 className=\"greeting-title orange-font\">祝福留言版</h1>\n      </header>\n      { !modalDisplay &&\n        <>\n          <GreetingForm onSubmit={onSubmit} />\n          <a className=\"link orange-font\" href={getUpperUrl(props.match.url)}>去照片牆瞧瞧</a>\n          <a className=\"link gray-font\" href=\"mailto:contact@weddi.app\">聯絡我們 contact@weddi.app</a>\n        </>\n      }\n      <Dialog user={user} show={modalDisplay} />\n    </div>\n  );\n};\n","export const preloadImage = (url: string, callback: (img: HTMLImageElement) => void): void => {\n  const img = new Image();\n  img.src = url;\n  img.onload = (): void => callback(img);\n};\n\nexport const preloadImageAsync = (url: string): Promise<HTMLImageElement> => {\n  return new Promise(resolve => {\n    preloadImage(url, resolve);\n  });\n};\n","import { Database } from 'firebase/database';\nimport { listPosts, onNewPost } from '../api';\nimport { newHeap } from '../utils/priorityQueue';\n\ninterface HeapNode {\n  priority: number;\n  timestampId: string;\n}\n\n/**\n * Create a queue for upcoming new feeds\n * There are two kinds of feeds in the queue, 1. feeds from pool 2. feeds from push event\n * We would like to pop the feeds in follows order untill the queue is empty:\n * [earliest pushed feed -> latest pushed feed -> earliest pool feed -> latest pool feed\n * once the pushed feed is popped from queue, it will be considered a pool feed\n *\n * When the queue is empty, it should refill the queue with feeds from pool.\n * The queue will be simplify down to a time-based queue if there is no pushed feed in the it.\n * The order of the popped feed will be [earliest pool feed -> latest pool feed]\n *\n * Implementation: priority queue (min heap)\n * The element in priority queue has members (priority: int, timestamp: string)\n * priority is 0 in pushed feed and 1 in pool feed\n * The element i is higher priority than j when\n *  1. i's priority < j's priority\n *  2. i's priority = j's priority and i's timestamp < j's timestamp\n */\nconst newHeapNode = (priority: number, timestampId: string): HeapNode => ({ priority, timestampId });\nconst heap = newHeap<HeapNode>((node1, node2) => {\n  if (node1.priority < node2.priority) {\n    return true;\n  }\n  if (node1.priority === node2.priority && node1.timestampId < node2.timestampId) {\n    return true;\n  }\n  return false;\n});\n\ntype NextFn = () => WeddiApp.Post.Data;\ntype UnsubscribeFn = () => void;\n\nexport const subscribePost = (database: Database): { unsubscribe: UnsubscribeFn; next: NextFn } => {\n  const postsPool: {[timestampId: string]: WeddiApp.Post.Data} = {};\n  let feeds: HeapNode[] = [];\n  listPosts(database).then(posts => {\n    if (posts === null) {\n      return;\n    }\n    Object.keys(posts).forEach(id => {\n      postsPool[id] = posts[id];\n    });\n  }).then(() => {\n    onNewPost(database, (post: WeddiApp.Post.Data) => {\n      if (!postsPool[post.id]) {\n        postsPool[post.id] = post;\n        heap.push(feeds, newHeapNode(0, post.id));\n      }\n    });\n  });\n\n  const next: NextFn = () => {\n    if (feeds.length === 0) {\n      // refill feeds with pool feeds\n      feeds = Object.keys(postsPool).map(postId => newHeapNode(1, postId));\n      heap.init(feeds);\n    }\n    const nextFeed = heap.pop(feeds);\n    if (nextFeed) {\n      return postsPool[nextFeed.timestampId];\n    }\n    throw new Error('queue is empty');\n  };\n\n  const unsubscribe: UnsubscribeFn = () => {\n    // TODO: unsub API\n  };\n  return {\n    unsubscribe,\n    next,\n  };\n};\n","/**\n * Min heap creator\n *\n * @param lessFn\n * @returns\n */\nexport const newHeap = <T>(lessFn: (node1: T, node2: T) => boolean) => {\n  const half = (n: number): number => Math.floor(n / 2);\n  const parent = (id: number): number => Math.floor((id - 1) / 2);\n  const children = (id: number): [number, number] => [2 * id + 1, 2 * id + 2];\n  const less = (array: T[], idx1: number, idx2: number): boolean => lessFn(array[idx1], array[idx2]);\n  const swap = (array: T[], idx1: number, idx2: number): void => {\n    [array[idx1], array[idx2]] = [array[idx2], array[idx1]];\n  };\n  const heapify = (array: T[], idx: number): void => {\n    let currentIdx = idx;\n    while (currentIdx < half(array.length)) {\n      // left child id is 2i+1 and right child id is 2i+2. We claim left child is always in heap but right child is not.\n      // Reason: index i is less than half size of the heap (i.e. i <= [n/2]-1) so left child 2i+1 <= 2[n/2] - 1 <= n-1 < n\n      // However, right child of index is 2i+2 <= 2[n/2] <= n. It is not in the heap when equal holds.\n      const [leftChildIdx, rightChildIdx] = children(currentIdx);\n      // find the smallest child\n      let childIdx = leftChildIdx;\n      if (rightChildIdx < array.length && less(array, rightChildIdx, childIdx)) {\n        childIdx = rightChildIdx;\n      }\n      // if current node is less than smallest child, stop downward swapping\n      if (less(array, currentIdx, childIdx)) {\n        break;\n      }\n      swap(array, currentIdx, childIdx);\n      currentIdx = childIdx;\n    }\n  };\n  return {\n    init: (array: T[]): void => {\n      for (let i = half(array.length) - 1; i >= 0; i--) {\n        heapify(array, i);\n      }\n    },\n    push: (array: T[], element: T): void => {\n      array.push(element);\n      let currentIdx = array.length - 1;\n      // current index is not root\n      while (currentIdx !== 0) {\n        const parentIdx = parent(currentIdx);\n        // if parent node is less than current node. stop upward swapping\n        if (less(array, parentIdx, currentIdx)) {\n          break;\n        }\n        swap(array, parentIdx, currentIdx);\n        currentIdx = parentIdx;\n      }\n    },\n    pop: (array: T[]): T | undefined => {\n      if (array.length === 0) {\n        return undefined;\n      }\n      swap(array, 0, array.length - 1);\n      const result = array.pop();\n      heapify(array, 0);\n      return result;\n    }\n  };\n};\n","import guessLanguage from 'guesslanguage';\n\n// data from https://irisreading.com/average-reading-speed-in-various-languages/\nconst CharactersPerMin = {\n  default: 987,\n  Arabic: 612,\n  Chinese: 255,\n  Dutch: 978,\n  English: 987,\n  Finnish: 1078,\n  French: 998,\n  German: 920,\n  Hebrew: 833,\n  Italian: 950,\n  Japanese: 357,\n  Polish: 916,\n  Portuguese: 913,\n  Russian: 986,\n  Slovenian: 885,\n  Spanish: 1025,\n  Swedish: 917,\n  Turkish: 1054,\n};\n\nexport function estimateReadingTime(paragraph: string, callback: (estimatedSecond: number) => any): void {\n  guessLanguage.guessLanguage.name(paragraph, (languageName: string) => {\n    const readingSpeedCharPerMin = languageName in CharactersPerMin ?\n      CharactersPerMin[languageName as keyof typeof CharactersPerMin] :\n      CharactersPerMin.default;\n\n    const second = Math.floor(paragraph.length / readingSpeedCharPerMin * 60);\n    callback(second);\n  });\n}\n","import React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport { RouteComponentProps } from 'react-router';\nimport { logEvent } from 'firebase/analytics';\nimport './board.scss';\n\nimport { useAnalytics, useDatabase } from '../Provider/FirebaseApp';\nimport Dialog from './Dialog';\nimport { Background } from './Background';\nimport { subscribePost } from './subscribePost';\nimport { estimateReadingTime } from '../utils/estimateReadingTime';\n\nconst Board: React.FC<RouteComponentProps> = (props) => {\n  // TODO: remove this and find a proper filter way on GA\n  const analytics = useAnalytics();\n  useEffect(() => {\n    logEvent(analytics, 'board_page_landed');\n  }, [analytics]);\n\n  const [modalDisplay, setModalDisplay] = useState(false);\n  const openModalAndClose = useCallback<(onClose: () => any, timeout?: number) => void>((onClose, timeout = 5000) => {\n    setModalDisplay(true);\n    setTimeout(() => {\n      setModalDisplay(false);\n      onClose();\n    }, timeout);\n  }, [setModalDisplay]);\n\n  const [post, setPost] = useState({});\n  const database = useDatabase();\n  const { next, unsubscribe } = useMemo(() => subscribePost(database), [database]);\n  const getNextPost = useCallback(() => {\n    setTimeout(() => {\n      const newPost = next();\n      setPost(newPost);\n      estimateReadingTime(newPost.greetings, (estimatedSecond) => {\n        const timeout = Math.max(estimatedSecond * 1000, 5000);\n        openModalAndClose(getNextPost, timeout);\n      });\n    }, 3000);\n  }, [openModalAndClose, next]);\n\n  useEffect(() => {\n    getNextPost();\n    return () => {\n      // unsubscribe post while component will unmount\n      unsubscribe();\n    };\n  }, [getNextPost, unsubscribe]);\n\n  return (\n    <React.Fragment>\n      <Background />\n      <Dialog user={post} show={modalDisplay} />\n      <a className=\"message-link\" href={`${props.match.url}/greetings`}>&lt;&lt; 留下你的祝福</a>\n      <a className=\"game-link\" href={`${props.match.url}/lottery`}>去遊戲頁</a>\n    </React.Fragment>\n  );\n};\n\nexport default Board;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { logEvent } from 'firebase/analytics';\nimport './lottery.scss';\n\nimport { useAnalytics, useDatabase } from '../Provider/FirebaseApp';\nimport { listPosts } from '../api';\nimport { permutationList } from '../utils/random';\nimport { getUpperUrl } from '../utils/urlHelpers';\n\nenum Stage {\n  Init,\n  Loaded,\n  Start,\n  Flipped,\n  Stacked,\n  Shuffling,\n  Shuffled,\n  Ready,\n  Error,\n}\n\nexport const Lottery: React.FC<RouteComponentProps> = (props) => {\n  // TODO: remove this and find a proper filter way on GA\n  const analytics = useAnalytics();\n  useEffect(() => {\n    logEvent(analytics, 'lottery_page_landed');\n  }, [analytics]);\n\n  const database = useDatabase();\n  const [posts, setPosts] = useState<WeddiApp.Post.Data[]>([]);\n  const [stage, setStage] = useState<Stage>(Stage.Init);\n\n  useEffect(() => {\n    listPosts(database, { joinedGame: true }).then(postsDictionary => {\n      if (postsDictionary === null) {\n        // TODO: enable retry\n        setStage(Stage.Error);\n        return;\n      }\n      const posts = Object.keys(postsDictionary).map(key => postsDictionary[key]);\n      const shuffledPosts = permutationList(posts);\n      setPosts(shuffledPosts);\n      setStage(Stage.Loaded);\n    });\n  }, [database]);\n\n  const [isExpanding, setIsExpanding] = useState(true);\n  const [isShuffling, setIsShuffling] = useState(false);\n  const [revealedIds, setRevealedIds] = useState<Record<string, boolean>>({ '*': true });\n\n  const onToggleFlipAll = useCallback(() => {\n    setRevealedIds(ids => {\n      if (ids['*']) { return { '*': false }; }\n      return { '*': true };\n    });\n  }, []);\n  const onFlipOne = useCallback((index: number) => {\n    setRevealedIds(ids => {\n      return {\n        ...ids,\n        [index]: true,\n      };\n    });\n  }, []);\n\n  const onToggleExpand = useCallback(() => {\n    setIsExpanding(expanding => !expanding);\n  }, []);\n  const onToggleShuffle = useCallback((callback = null) => {\n    setIsShuffling(true);\n    const timeout = setTimeout(() => {\n      setPosts(posts => permutationList(posts));\n      setIsShuffling(false);\n      clearTimeout(timeout);\n      if (callback) {\n        callback();\n      }\n    }, 1200 * 3);\n  }, []);\n\n  useEffect(() => {\n    switch(stage) {\n      case Stage.Start: {\n        onToggleFlipAll();\n        setStage(Stage.Flipped);\n        return;\n      }\n      case Stage.Flipped: {\n        onToggleExpand();\n        setStage(Stage.Stacked);\n        return;\n      }\n      case Stage.Stacked: {\n        onToggleShuffle(() => setStage(Stage.Shuffled));\n        setStage(Stage.Shuffling);\n        return;\n      }\n      case Stage.Shuffled: {\n        onToggleExpand();\n        setStage(Stage.Ready);\n        return;\n      }\n    }\n  }, [stage, onToggleFlipAll, onToggleExpand, onToggleShuffle]);\n\n  const onGoBtnClick = useCallback(() => {\n    if (stage === Stage.Loaded) {\n      setStage(Stage.Start);\n    }\n  }, [stage]);\n\n  const onResetBtnClick = useCallback(() => {\n    setIsExpanding(true);\n    setIsShuffling(false);\n    setRevealedIds({ '*': true });\n    setStage(Stage.Loaded);\n  }, [setIsExpanding, setIsShuffling, setRevealedIds, setStage]);\n\n  const allCards = posts.map((post, index) => (\n    <li key={post.id} className=\"card\" onClick={() => onFlipOne(index)}>\n      <div className={`inner ${revealedIds['*'] || revealedIds[index] ? '' : 'flip-transition'}`}>\n        <div className=\"front\">{post.name}</div>\n        <div className=\"back\">{isExpanding ? index + 1 : ''}</div>\n      </div>\n    </li>)\n  );\n\n  const size = Math.min(10, Math.floor(Math.sqrt(allCards.length)));\n\n  const stacks = [];\n  while (allCards.length > 0) {\n    const cards = allCards.splice(0, size);\n    stacks.push((\n      <li key={`stack-${stacks.length}`} className=\"stack\">\n        <ul className=\"cards-down\">\n          {cards}\n        </ul>\n      </li>\n    ));\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"system-message\">\n        { stage === Stage.Init ? 'Loading...' : '' }\n        { stage === Stage.Error ? '現在還沒有玩家喔！' : '' }\n      </div>\n      <div className=\"lottery-btns\">\n        <button className={stage === Stage.Loaded ? 'show' : 'hide'} onClick={onGoBtnClick}>洗牌</button>\n        <button className={stage === Stage.Ready ? 'show' : 'hide' } onClick={onResetBtnClick}>重置</button>\n      </div>\n      <ul className={`card-stacks ${isExpanding ? 'expand-transition' : ''} ${isShuffling ? 'shuffle-transition' : ''}`}>{stacks}</ul>\n      <a className=\"home-link\" href={getUpperUrl(props.match.url)}>回首頁</a>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport { Greeting } from './Greeting/Greeting';\nimport Board from './Board';\nimport { Lottery } from './Lottery/Lottery';\nimport configService from './services/configService';\nimport { FirebaseAppProvider } from './Provider/FirebaseApp';\n\nconst setTitle = (title) => document.title = title;\n\nconst App = ({ match }) => {\n  configService.init(match.params.gnbId);\n  setTitle(configService.config.doc.title);\n  const path = match.url;\n  return (\n    <FirebaseAppProvider firebaseConfig={configService.config.firebase}>\n      <Switch>\n        <Route path={`${path}/lottery`} component={Lottery} />\n        <Route path={`${path}/greetings`} component={Greeting} />\n        <Route path={path} component={Board} />\n      </Switch>\n    </FirebaseAppProvider>\n  );\n};\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nconst Home = () => (<div>Weddi App <a href=\"mailto:contact@weddi.app\">聯絡我們 contact@weddi.app</a></div>);\n\nconst Root = () => {\n  return (\n    <Router basename={process.env.PUBLIC_URL} forceRefresh>\n      <Switch>\n        <Route path=\"/:gnbId/\" component={App} />\n        <Route path=\"/\" component={Home} />\n      </Switch>\n    </Router>\n  );\n};\n\nReactDOM.render(<Root />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}