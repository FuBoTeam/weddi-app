{"version":3,"sources":["images/uploadLoading.svg","images/loading.gif","config.ts","utils/random.js","images/index.js","Board/Dialog.js","api/index.ts","Greeting/index.js","Board/queue.js","Board/index.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","CHYY_CONFIG","doc","title","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","img","namespace","endpoint","totalImgs","bgImgsShouldBePicked","fmImgsShouldBePicked","TLTY_CONFIG","TEST_CONFIG","config","gnbId","this","getConfigById","Error","combinationList","list","k","result","i","length","j","random","includes","push","permutationList","preloadImage","url","callback","Image","src","onload","getImageUrl","key","size","Config","Dialog","t","setState","imgWidth","width","imgHeight","height","state","props","show","user","imgUrl","mayMobile","window","innerWidth","verticalImg","modalStyle","margin","className","style","alt","name","greetings","Component","firebaseApi","app","database","storage","writePost","postData","postId","ref","wrappedPostData","modifiedTime","Date","toISOString","userAgent","navigator","id","child","set","uploadImage","imgName","image","put","Greeting","allImgUrls","range","map","imgUrls","form","pickedImg","idx","upload","modalDisplay","isLoading","onFileChangeHandler","bind","onTextChangeHandler","onSubmitHandler","isValid","getImg","plusImgIdx","renderPhotoRadios","checked","Fragment","hidden","type","value","readOnly","backgroundImage","paths","match","split","pop","join","event","target","files","startsWith","loadImage","canvas","toBlob","blob","maxWidth","maxHeight","orientation","noRevoke","trim","preventDefault","uploadFlow","isUploadPage","uuid","v4","Api","uploadProc","getDownloadURL","getFormData","setTimeout","history","getUpperUrl","nextIdx","undefined","placeholder","accept","onChange","URL","createObjectURL","onClick","onSubmit","renderUploadImageSection","renderPickImageSection","required","disabled","loadingIcon","href","renderGreetingForm","Queue","q","element","splice","Board","bgImgUrls","intervals","permutation","isBgSwitching","showDialog","Object","assign","pickUpFeed","newFeeds","oldFeeds","nextFeed","isEmpty","feed","on","data","val","setInterval","forEach","clearInterval","bgImgUrl","order","App","init","params","document","path","component","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","Home","ReactDOM","render","basename","process","forceRefresh","getElementById","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.92ac4d09.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/uploadLoading.a33612b2.svg\";","module.exports = __webpack_public_path__ + \"static/media/loading.822699a4.gif\";","interface IConfig {\n  doc: DocumentConfig;\n  firebase: FirebaseConfig;\n  img: ImageConfig;\n}\n\ninterface DocumentConfig {\n  title: string;\n}\n\ninterface FirebaseConfig {\n  apiKey: string;\n  authDomain: string;\n  databaseURL: string;\n  projectId: string;\n  storageBucket: string;\n  messagingSenderId: string;\n  appId: string;\n}\n\ninterface ImageConfig {\n  namespace: string;\n  endpoint: string;\n  totalImgs: number;\n  bgImgsShouldBePicked: number;\n  fmImgsShouldBePicked: number;\n}\n\nconst CHYY_CONFIG: IConfig = {\n  doc: {\n    title: \"<3 YaYun & ChinHui <3\"\n  },\n  firebase: {\n    apiKey: \"AIzaSyD_1irJWOgT9x5fvmbXJm0fRRRZ8DNUfpU\",\n    authDomain: \"weddi-app.firebaseapp.com\",\n    databaseURL: \"https://weddi-app.firebaseio.com/\",\n    projectId: \"weddi-app\",\n    storageBucket: \"image.weddi.app\",\n    messagingSenderId: \"324415165027\",\n    appId: \"1:324415165027:web:76b8291835ef32c5c75e56\"\n  },\n  img: {\n    namespace: \"chyy\",\n    endpoint: \"https://storage.googleapis.com/image.weddi.app/\",\n    totalImgs: 114,\n    bgImgsShouldBePicked: 40,\n    fmImgsShouldBePicked: 5\n  }\n};\n\nconst TLTY_CONFIG: IConfig = {\n  doc: {\n    title: \"<3 Tony & Claire <3\"\n  },\n  firebase: {\n    apiKey: \"AIzaSyD_1irJWOgT9x5fvmbXJm0fRRRZ8DNUfpU\",\n    authDomain: \"weddi-app.firebaseapp.com\",\n    databaseURL: \"https://weddi-app-test.firebaseio.com/\",\n    projectId: \"weddi-app\",\n    storageBucket: \"image.weddi.app\",\n    messagingSenderId: \"324415165027\",\n    appId: \"1:324415165027:web:76b8291835ef32c5c75e56\"\n  },\n  img: {\n    namespace: \"tlty\",\n    endpoint: \"https://storage.googleapis.com/image.weddi.app/\",\n    totalImgs: 30,\n    bgImgsShouldBePicked: 30,\n    fmImgsShouldBePicked: 5\n  }\n};\n\nconst TEST_CONFIG: IConfig = {\n  doc: {\n    title: \"<3 Groom & Bride <3\"\n  },\n  firebase: {\n    apiKey: \"AIzaSyD_1irJWOgT9x5fvmbXJm0fRRRZ8DNUfpU\",\n    authDomain: \"weddi-app.firebaseapp.com\",\n    databaseURL: \"https://weddi-app-test.firebaseio.com/\",\n    projectId: \"weddi-app\",\n    storageBucket: \"image.weddi.app\",\n    messagingSenderId: \"324415165027\",\n    appId: \"1:324415165027:web:76b8291835ef32c5c75e56\"\n  },\n  img: {\n    namespace: \"chyy\",\n    endpoint: \"https://storage.googleapis.com/image.weddi.app/\",\n    totalImgs: 114,\n    bgImgsShouldBePicked: 40,\n    fmImgsShouldBePicked: 5\n  }\n};\n\nconst getConfigById = (gnbId: String): IConfig => {\n  switch (gnbId) {\n    case \"chyy\":\n      return CHYY_CONFIG;\n    case \"tlty\":\n      return TLTY_CONFIG;\n    default:\n      return TEST_CONFIG;\n  }\n};\n\nexport class Config {\n  config?: IConfig;\n\n  init(gnbId: String): void {\n    if (!this.config) {\n      this.config = getConfigById(gnbId);\n    }\n  }\n\n  get doc(): DocumentConfig {\n    if (this.config) {\n      return this.config.doc;\n    }\n    throw Error(\"config is not set yet\");\n  }\n\n  get firebase(): FirebaseConfig {\n    if (this.config) {\n      return this.config.firebase;\n    }\n    throw Error(\"config is not set yet\");\n  }\n\n  get img(): ImageConfig {\n    if (this.config) {\n      return this.config.img;\n    }\n    throw Error(\"config is not set yet\");\n  }\n}\n\nconst config: Config = new Config();\n\nexport default config;\n","import random from 'lodash/random';\n\nexport const combinationList = (list, k) => {\n  const result = [];\n  /* select k elements n-k <= i < n */\n  for (let i = list.length - k; i < list.length; i++) {\n    /* A random integer such that 0 <= j < i */\n    const j = random(i);\n    /* Select element j if element j is not selected yet */\n    /* Otherwise select element i */\n    if (result.includes(list[j])) {\n      result.push(list[i]);\n    } else {\n      result.push(list[j]);\n    }\n  }\n  return result;\n};\n\nexport const permutationList = list => {\n  for (let i = 0; i <= list.length - 2; i++) {\n    /* A random integer such that i <= j < n */\n    const j = random(i, list.length - 1);\n    /* Swap the randomly picked element with list[i] */\n    [list[i], list[j]] = [list[j], list[i]];\n  }\n  return list;\n};\n","import Config from \"../config\";\n\nconst IMG_SIZE_S = \"_small\";\nconst IMG_SIZE_M = \"\";\n\nexport const preloadImage = (url, callback) => {\n  const img = new Image();\n  img.src = url;\n  img.onload = callback;\n};\n\n// TODO: make it a service and do not need to concate urls\nexport const getImageUrl = (key, size = IMG_SIZE_S) =>\n  `${Config.img.endpoint}${Config.img.namespace}/${key}${size}.jpg`;\n\nexport const IMG_SIZES = {\n  IMG_SIZE_S,\n  IMG_SIZE_M\n};\n","import React, { Component } from 'react';\nimport './board.scss';\n\nexport default class Dialog extends Component {\n  constructor() {\n    super();\n    this.img =  new Image();\n    const t = this;\n    this.img.onload = function() {\n      t.setState(() => ({\n        imgWidth: this.width || 0,\n        imgHeight: this.height || 0,\n      }));\n    };\n    this.state = {\n      imgWidth: 0,\n      imgHeight: 0,\n    };\n  }\n\n  componentDidMount() {\n    this.img.src = this.props.show ? this.props.user.imgUrl : '';\n  }\n\n  componentDidUpdate() {\n    this.img.src = this.props.show ? this.props.user.imgUrl : '';\n  }\n\n  render() {\n    const { user, show } = this.props;\n\n    const mayMobile = window.innerWidth < 1000;\n    const verticalImg = this.state.imgWidth < this.state.imgHeight;\n    const modalStyle = (show && mayMobile && verticalImg) ? { margin: '10% 20% 50px' } : {};\n\n    return (\n      <div className={show ? 'dialog show-dialog' : 'dialog'}>\n        <div className=\"modal-sm\" style={modalStyle}>\n          <div className=\"image-container\">\n            <img className=\"user-image\" src={user.imgUrl} alt=\"images\" />\n          </div>\n          <div className=\"message\">\n            <h2>@ {user.name}</h2>\n            <p>{user.greetings}</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import * as firebase from \"firebase/app\";\nimport \"firebase/database\";\nimport \"firebase/storage\";\n\nimport { Config } from \"../config\";\n\nclass FirebaseApi {\n  config?: Config;\n  app?: firebase.app.App;\n  init(config: Config) {\n    if (!this.app) {\n      this.config = config;\n      this.app = firebase.initializeApp(this.config.firebase);\n    }\n  }\n\n  get database(): firebase.database.Database {\n    if (!this.app) {\n      throw new Error(\"app is not initial yet\");\n    }\n    return this.app.database();\n  }\n\n  get storage(): firebase.storage.Storage {\n    if (!this.app) {\n      throw new Error(\"app is not initial yet\");\n    }\n    return this.app.storage();\n  }\n}\n\nconst firebaseApi = new FirebaseApi();\nexport default firebaseApi;\n\n// TODO: refactor to be registration api sets, i.e.\n// firebaseApi.dbRegister(posts)\n//\n// posts = (dbRef) => ({\n//   write: data => {\n//     id = dbRef.push().key\n//     return dbRef.child(id).set(data)\n//   },\n//   onAdded: ...\n// })\n//\n// firebaseApi.storageRegister(imgs)\n// imgs = (storageRef) => ...\n//\n\nexport const writePost = (postData: object) => {\n  const postId = firebaseApi.database.ref(\"posts\").push().key;\n  if (!postId) {\n    throw new Error(\"post id is empty\");\n  }\n  const wrappedPostData = {\n    ...postData,\n    modifiedTime: new Date().toISOString(),\n    userAgent: navigator.userAgent,\n    id: postId\n  };\n  return firebaseApi.database\n    .ref(\"posts\")\n    .child(postId)\n    .set(wrappedPostData);\n};\n\nexport const onNewPost = (callback: Function) => {\n  const postRef = firebaseApi.database.ref(\"posts\");\n  postRef.on(\"child_added\", (data: firebase.database.DataSnapshot) => {\n    callback(data.val());\n  });\n};\n\nexport const listAllImages = () => {\n  if (!firebaseApi.config) {\n    throw new Error(\"app is not initial yet\");\n  }\n  return firebaseApi.storage.ref(firebaseApi.config.img.namespace).listAll();\n};\n\nexport const uploadImage = (imgName: string, image: Blob) => {\n  if (!firebaseApi.config) {\n    throw new Error(\"app is not initial yet\");\n  }\n  return firebaseApi.storage\n    .ref(firebaseApi.config.img.namespace)\n    .child(\"public_upload\")\n    .child(imgName)\n    .put(image);\n};\n","import React, { Component } from 'react';\nimport range from 'lodash/range';\nimport uuid from 'uuid';\nimport loadImage from 'blueimp-load-image';\nimport './greeting.scss';\n\nimport Config from '../config';\nimport { combinationList } from '../utils/random';\nimport { preloadImage, getImageUrl } from '../images';\nimport Dialog from '../Board/Dialog';\nimport loadingIcon from '../images/uploadLoading.svg';\nimport * as Api from '../api';\n\nclass Greeting extends Component {\n  allImgUrls = range(Config.img.totalImgs).map(k => getImageUrl(k));\n  fmImgsShouldBePicked = Config.img.fmImgsShouldBePicked;\n  imgUrls = combinationList(this.allImgUrls, this.fmImgsShouldBePicked);\n  state = {\n    form: {\n      name: '',\n      greetings: '',\n      pickedImg: {\n        idx: 0,\n        url: this.imgUrls[0],\n      },\n      upload: null,\n    },\n    upload: false,\n    modalDisplay: false,\n    isLoading: false\n  };\n\n  onFileChangeHandler = this.onFileChangeHandler.bind(this);\n  onTextChangeHandler = this.onTextChangeHandler.bind(this);\n  onSubmitHandler = this.onSubmitHandler.bind(this);\n  isValid = this.isValid.bind(this);\n  getImg = this.getImg.bind(this);\n  plusImgIdx = this.plusImgIdx.bind(this);\n\n  getUpperUrl() {\n    const matchUrl = this.props.match.url;\n    const paths = matchUrl.split('/');\n    paths.pop();\n    return paths.join('/');\n  }\n\n  getFormData() {\n    return {\n      ...this.state.form,\n      imgUrl: this.state.form.pickedImg.url,\n    };\n  }\n\n  onFileChangeHandler(event) {\n    const key = event.target.name;\n    const value = event.target.files[0];\n    if (key && value && value.type.startsWith('image/')) {\n      loadImage(\n        value,\n        canvas => canvas.toBlob(blob => {\n          this.setState(({ form }) => ({ form: { ...form, [key]: blob } }))\n        }, \"image/jpeg\", 0.75),\n        { maxWidth: 2048, maxHeight: 2048, orientation: true, canvas: true, noRevoke: true }\n      );\n    }\n  }\n\n  onTextChangeHandler(event) {\n    const key = event.target.name;\n    const value = event.target.value.trim();\n    this.setState(({ form }) => ({ form: { ...form, [key]: value } }));\n  }\n\n  onSubmitHandler(event) {\n    event.preventDefault();\n    if (this.isValid()) {\n      return this.uploadFlow();\n    }\n  }\n\n  async uploadFlow() {\n    // TODO?: start uploading place holder\n    this.setState({ isLoading: true })\n    let imgUrl = this.state.form.pickedImg.url;\n    if (this.state.isUploadPage) {\n      const imgName = uuid.v4();\n      const uploadProc = await Api.uploadImage(imgName, this.state.form.upload);\n      imgUrl = await uploadProc.ref.getDownloadURL();\n      this.setState({\n        form: {\n          ...this.state.form,\n          pickedImg: {\n            idx: -1,\n            url: imgUrl\n          }\n        }\n      });\n    }\n    await Api.writePost(this.getFormData());\n    // TODO:? stop uploading place holder\n    const updateStateAndRedirect = () => {\n      this.setState({ modalDisplay: true, isLoading: false });\n      setTimeout(() => { this.props.history.push(this.getUpperUrl()); }, 5000);\n    }\n    preloadImage(imgUrl, updateStateAndRedirect);\n  }\n\n  getImg(idx) {\n    return ({ idx, url: this.imgUrls[idx] });\n  }\n\n  plusImgIdx(i) {\n    const nextIdx = (this.state.form.pickedImg.idx + i + this.fmImgsShouldBePicked) % this.fmImgsShouldBePicked;\n    // set img idx to render the seleceted img\n    this.setState(({ form }) => ({\n      form: { ...form, pickedImg: this.getImg(nextIdx) }\n    }));\n  }\n\n  isValid() {\n    const { name, greetings, pickedImg } = this.state.form;\n    return name.trim() !== '' && greetings.trim() !== '' && pickedImg.url !== undefined;\n  }\n\n  renderPhotoRadios = () => this.imgUrls.map((url, i) => {\n    const checked = this.state.form.pickedImg.idx === i && this.state.form.pickedImg.url === url;\n    return (\n      <React.Fragment key={`image_${i}`}>\n        <input hidden type=\"radio\" name=\"imgUrl\" value={url} checked={checked} readOnly />\n        <div className={\"layer\" + (checked ? \"\" : \" hidden\")} style={{ backgroundImage: `url(${url})` }} />\n        <img className={\"fade\" + (checked ? \"\" : \" hidden\")} src={url} alt={url} />\n      </React.Fragment>\n    );\n  });\n\n  renderUploadImageSection() {\n    return (\n      <label className=\"img-window upload\">\n        <input hidden type=\"file\" name=\"upload\" placeholder=\"上傳照片\" accept=\"image/*\" onChange={this.onFileChangeHandler} />\n        {this.state.form.upload && <img src={URL.createObjectURL(this.state.form.upload)} alt=\"upload preview\" />}\n        {!this.state.form.upload && <span className=\"upload-field\">請上傳圖片</span>}\n      </label>\n    );\n  }\n\n  renderPickImageSection() {\n    return (\n      <React.Fragment>\n        <div className=\"img-window\">\n          <div className=\"numbertext\">{this.state.form.pickedImg.idx + 1} / {this.fmImgsShouldBePicked}</div>\n          {this.renderPhotoRadios()}\n        </div>\n        <span className=\"prev\" onClick={() => this.plusImgIdx(-1)}>&#10094;</span>\n        <span className=\"next\" onClick={() => this.plusImgIdx(1)}>&#10095;</span>\n      </React.Fragment>\n    );\n  }\n\n  renderGreetingForm() {\n    return (\n      <form className=\"greeting-form\" onSubmit={this.onSubmitHandler}>\n        <ul className=\"tabs-view\">\n          <li className={ this.state.isUploadPage ? 'pick' : 'pick active' } onClick={() => this.setState({ isUploadPage: false })}>挑一張照片</li>\n          <li className={ this.state.isUploadPage ? 'pick active' : 'pick' } onClick={() => this.setState({ isUploadPage: true })}>上傳一張照片</li>\n        </ul>\n        <div className=\"slideshow-container\">\n          <div hidden={!this.state.isUploadPage}>{this.renderUploadImageSection()}</div>\n          <div hidden={this.state.isUploadPage}>{this.renderPickImageSection()}</div>\n        </div>\n        <div className=\"greeting-message-block\">\n          <label className=\"input\"><h2>@</h2><input type=\"text\" name=\"name\" placeholder=\"姓名\" onChange={this.onTextChangeHandler} required /></label>\n          <label className=\"input\"><textarea name=\"greetings\" placeholder=\"祝賀詞\" onChange={this.onTextChangeHandler} required /></label>\n        </div>\n        <button className=\"btn\" type=\"submit\" disabled={this.state.isLoading}>\n          {this.state.isLoading && <img className=\"loading-img\" src={loadingIcon} alt=\"\" />}\n          留言\n        </button>\n        <a className=\"link orange-font\" href={this.getUpperUrl()}>去照片牆瞧瞧</a>\n      </form>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"greeting\">\n        <header className=\"greeting-header\">\n          <h1 className=\"greeting-title orange-font\">祝福留言版</h1>\n        </header>\n        {!this.state.modalDisplay && this.renderGreetingForm()}\n        <Dialog user={this.getFormData()} show={this.state.modalDisplay} />\n      </div>\n    );\n  }\n}\n\nexport default Greeting;\n","export default class Queue {\n  constructor() {\n    this.q = [];\n  }\n\n  push(element) {\n    this.q.push(element);\n  }\n\n  pop() {\n    const result = this.q.splice(0, 1)[0];\n    return result;\n  }\n\n  isEmpty() {\n    return this.q.length === 0;\n  }\n}","import React, { Component } from 'react';\nimport range from 'lodash/range';\nimport './board.scss';\nimport loadingIcon from '../images/loading.gif';\nimport Dialog from './Dialog';\n\nimport Queue from './queue';\nimport Config from '../config';\nimport { combinationList, permutationList } from '../utils/random';\nimport { preloadImage, getImageUrl } from '../images';\n\n\nimport * as Api from '../api';\n\nexport default class Board extends Component {\n  allImgUrls = range(Config.img.totalImgs).map(k => getImageUrl(k));\n  bgImgUrls = combinationList(this.allImgUrls, Config.img.bgImgsShouldBePicked);\n  intervals = [];\n  state = {\n    isLoading: true,\n    modalDisplay: false,\n    user: {},\n    permutation: permutationList(range(this.bgImgUrls.length)),\n    isBgSwitching: false,\n  };\n\n  componentDidMount() {\n    const newFeeds = new Queue();\n    const oldFeeds = new Queue();\n\n    Api.onNewPost((feed) => newFeeds.push(feed));\n\n    window.onload = () => {\n      this.setState(({ isLoading }) => ({ isLoading: !isLoading }))\n\n      this.intervals.push(setInterval(() => {\n        this.pickUpFeed(newFeeds, oldFeeds);\n      }, 8000));\n    };\n\n    // Auto refresh background images\n    this.intervals.push(\n        setInterval(() => {\n        this.setState({\n          isBgSwitching: true,\n        });\n        setTimeout(() => {\n          this.setState({\n            permutation: permutationList(range(this.bgImgUrls.length)),\n          });\n          setTimeout(() => {\n            this.setState({\n              isBgSwitching: false,\n            })\n          }, 1000);\n        }, 1000);\n      }, 5 * 60 * 1000)\n    );\n  }\n\n  componentWillUnmount() {\n    this.intervals.forEach(clearInterval);\n  }\n\n  showDialog = (user) => {\n    this.setState({ user: Object.assign({}, user) });\n    const displayAndHide = () => {\n      this.setState(() => ({ modalDisplay: true }));\n\n      setTimeout(() => {\n        this.setState(() => ({ modalDisplay: false }));\n      }, 5000);\n    };\n    // preload dialog img and display in dialog\n    preloadImage(user.imgUrl, displayAndHide);\n  }\n\n  pickUpFeed = (newFeeds, oldFeeds) => {\n    const nextFeed = newFeeds.isEmpty() ? oldFeeds.pop() : newFeeds.pop();\n    this.showDialog(nextFeed);\n    oldFeeds.push(nextFeed);\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"container\">\n          {\n            this.state.isLoading && <div className=\"loading\">\n              <img src={loadingIcon} alt=\"\" />\n              <span>Loading...</span>\n            </div>\n          }\n          {\n            this.bgImgUrls.map((bgImgUrl, idx) =>\n              <img\n                key={bgImgUrl}\n                className={\n                  this.state.isLoading || this.state.isBgSwitching ? 'hidden' : 'visible'\n                }\n                style={{order: this.state.permutation[idx]}}\n                src={bgImgUrl}\n                alt=\"\"\n              />\n            )\n          }\n        </div>\n        <Dialog user={this.state.user} show={this.state.modalDisplay} />\n        <a className=\"message-link\" href={`${this.props.match.url}/greetings`}>&lt;&lt; 留下你的祝福</a>\n      </React.Fragment>\n    );\n  }\n}\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Greeting from './Greeting';\nimport Board from './Board';\nimport Config from './config';\nimport Api from './api';\n\nconst setTitle = (title) => document.title = title;\n\nconst App = ({ match }) => {\n  Config.init(match.params.gnbId);\n  Api.init(Config);\n  setTitle(Config.doc.title);\n  const path = match.url;\n  return (\n    <Switch>\n      <Route path={`${path}/greetings`} component={Greeting} />\n      <Route path={path} component={Board} />\n    </Switch>\n  );\n};\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nconst Home = () => (<div>Weddi App</div>);\n\nconst Root = () => {\n  return (\n    <Router basename={process.env.PUBLIC_URL} forceRefresh>\n      <Switch>\n        <Route path=\"/:gnbId/\" component={App} />\n        <Route path=\"/\" component={Home} />\n      </Switch>\n    </Router>\n  );\n};\n\nReactDOM.render(<Root />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}