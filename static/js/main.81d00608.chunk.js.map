{"version":3,"sources":["images/uploadLoading.svg","images/loading.gif","Board/Background.tsx","services/configService.ts","utils/random.ts","api/index.ts","Provider/FirebaseApp/context.ts","Provider/FirebaseApp/provider.tsx","Provider/FirebaseApp/useHooks.ts","Greeting/ImagePicker.tsx","Greeting/ImageUploader.tsx","Greeting/GreetingForm.tsx","Board/Dialog.js","utils/urlHelpers.ts","Greeting/index.js","images/preloadImage.ts","Lottery/Lottery.tsx","Board/subscribePost.ts","utils/priorityQueue.ts","Board/index.tsx","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","BG_STATE","CHYY_CONFIG","doc","title","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","post","namespace","img","bgImgsShouldBePicked","fmImgsShouldBePicked","TLTY_CONFIG","YKYL_CONFIG","TEST_CONFIG","configService","_config","gnbId","this","getConfigById","Error","random","a","b","lower","Math","ceil","min","upper","floor","max","combinationList","list","k","result","i","length","j","includes","push","permutationList","listPosts","database","joinedGame","postRef","ref","config","orderByChild","equalTo","once","then","snapshot","val","writePost","postData","postId","key","wrappedPostData","modifiedTime","Date","toISOString","userAgent","navigator","id","child","set","listAllImages","storage","size","listAll","listResult","Promise","all","items","map","item","getDownloadURL","uploadImage","imgName","image","put","FirebaseContext","createContext","FirebaseAppProvider","props","firebaseConfig","appName","value","useMemo","existingApp","apps","find","app","name","options","Object","keys","every","initializeApp","Provider","useDatabase","useContext","useStorage","ImagePicker","imgUrls","onChange","disabled","totalImages","useState","pickerIndex","setPickerIndex","plusImgIdx","nextIdx","Fragment","className","url","checked","hidden","type","readOnly","style","backgroundImage","src","alt","onClick","ImageUploader","upload","setUpload","placeholder","accept","event","target","files","startsWith","loadImage","canvas","toBlob","blob","maxWidth","maxHeight","orientation","noRevoke","URL","createObjectURL","GreetingForm","onSubmit","isProcessing","setIsProcessing","greetings","form","setForm","isUploadPage","setIsUploadPage","setImgUrls","pickedImg","setPickedImg","uploadImg","setUploadImg","useEffect","imageUrls","imgCandidates","onTextChangeHandler","trim","preventDefault","isValid","imgUrl","uuid","v4","uploadProc","input","uploadFlow","required","loadingIcon","Dialog","user","show","loading","setLoading","imgRef","useRef","mayMobile","window","innerWidth","verticalImg","current","clientWidth","clientHeight","modalStyle","margin","onLoad","getUpperUrl","matchUrl","paths","split","pop","join","Greeting","modalDisplay","setModalDisplay","setUser","formData","setTimeout","history","href","match","preloadImageAsync","resolve","callback","Image","onload","preloadImage","Stage","Background","isLoading","setIsLoading","BG_HIDDEN","bgState","setBgState","permutation","setPermutation","BG_FADE_OUT","BG_FADE_IN","BG_VISIBLE","bgImgUrl","newHeapNode","priority","timestampId","heap","lessFn","half","n","less","array","idx1","idx2","swap","heapify","idx","currentIdx","leftChildIdx","rightChildIdx","childIdx","init","element","parentIdx","newHeap","node1","node2","subscribePost","listener","postsPool","feeds","posts","forEach","on","data","onNewPost","interval","setInterval","nextFeed","clearInterval","Board","unsubscribe","Lottery","setPosts","Init","stage","setStage","postsDictionary","shuffledPosts","Loaded","isExpanding","setIsExpanding","isShuffling","setIsShuffling","revealedIds","setRevealedIds","onToggleFlipAll","useCallback","ids","onFlipOne","index","onToggleExpand","expanding","onToggleShuffle","timeout","clearTimeout","Start","Flipped","Stacked","Shuffled","Shuffling","Ready","onGoBtnClick","onResetBtnClick","allCards","sqrt","stacks","cards","splice","App","params","document","path","component","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","Home","ReactDOM","render","basename","process","forceRefresh","getElementById","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.81d00608.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/uploadLoading.a33612b2.svg\";","module.exports = __webpack_public_path__ + \"static/media/loading.822699a4.gif\";","import React, { useState, useEffect } from 'react';\nimport { useStorage } from '../Provider/FirebaseApp';\nimport configService from '../services/configService';\nimport { listAllImages } from '../api';\nimport { combinationList, permutationList } from '../utils/random';\nimport { preloadImageAsync } from '../images/preloadImage';\n\nimport loadingIcon from '../images/loading.gif';\nimport './board.scss';\n\nconst TIME_FADE_OUT = 1000;\nconst TIME_FADE_IN = 1000;\nconst TIME_HIDDEN = 1500;\nconst TIME_UPDATE_BACKGROUND = 30 * 60 * 1000;\n\nenum BG_STATE {\n  BG_FADE_IN = 'BG_FADE_IN',\n  BG_FADE_OUT = 'BG_FADE_OUT',\n  BG_HIDDEN = 'BG_HIDDEN',\n  BG_VISIBLE = 'BG_VISIBLE',\n}\n\nexport const Background = () => {\n  const storage = useStorage();\n  const [isLoading, setIsLoading] = useState(true);\n  const [bgState, setBgState] = useState(BG_STATE.BG_HIDDEN);\n  const [permutation, setPermutation] = useState<string[]>([]);\n\n  useEffect(() => {\n    if (isLoading) {\n      listAllImages(storage)().then(imgUrls => {\n        Promise.all(\n          imgUrls.map(preloadImageAsync)\n        ).then(() => setIsLoading(false));\n        setPermutation(\n          permutationList(\n            combinationList(imgUrls, configService.config.img.bgImgsShouldBePicked)\n          )\n        );\n      });\n    }\n  }, [storage, isLoading]);\n\n  useEffect(() => {\n    switch(bgState) {\n      case BG_STATE.BG_FADE_OUT: {\n        setTimeout(() => {\n          setBgState(BG_STATE.BG_HIDDEN);\n          setPermutation((permutation) => permutationList(permutation));\n        }, TIME_FADE_OUT);\n        break;\n      }\n      case BG_STATE.BG_HIDDEN: {\n        setTimeout(() => {\n          setBgState(BG_STATE.BG_FADE_IN);\n        }, TIME_HIDDEN);\n        break;\n      }\n      case BG_STATE.BG_FADE_IN: {\n        setTimeout(() => {\n          setBgState(BG_STATE.BG_VISIBLE);\n        }, TIME_FADE_IN);\n        break;\n      }\n      case BG_STATE.BG_VISIBLE: {\n        setTimeout(() => {\n          setBgState(BG_STATE.BG_FADE_OUT);\n        }, TIME_UPDATE_BACKGROUND);\n        break;\n      }\n      default: {\n        break;\n      }\n    }\n  }, [bgState]);\n\n  return (\n    <div className=\"container\">\n      {\n        isLoading && (\n          <div className=\"loading\">\n            <img src={loadingIcon} alt=\"\" />\n            <span>Loading...</span>\n          </div>\n        )\n      }\n      {\n        permutation.map((bgImgUrl) =>\n          <img\n            key={bgImgUrl}\n            className={\n              isLoading || bgState === BG_STATE.BG_HIDDEN ? 'hidden' :\n                bgState === BG_STATE.BG_VISIBLE ? 'visible' :\n                  bgState === BG_STATE.BG_FADE_IN ? 'fade-in' :\n                    bgState === BG_STATE.BG_FADE_OUT ? 'fade-out' :\n                      ''\n            }\n            src={bgImgUrl}\n            alt=\"\"\n          />\n        )\n      }\n    </div>\n  );\n};\n","const CHYY_CONFIG: ConfigService.Config = {\n  doc: {\n    title: \"<3 YaYun & ChinHui <3\"\n  },\n  firebase: {\n    apiKey: \"AIzaSyD_1irJWOgT9x5fvmbXJm0fRRRZ8DNUfpU\",\n    authDomain: \"weddi-app.firebaseapp.com\",\n    databaseURL: \"https://weddi-app.firebaseio.com/\",\n    projectId: \"weddi-app\",\n    storageBucket: \"image.weddi.app\",\n    messagingSenderId: \"324415165027\",\n    appId: \"1:324415165027:web:76b8291835ef32c5c75e56\"\n  },\n  post: {\n    namespace: \"chyy\",\n  },\n  img: {\n    namespace: \"chyy\",\n    bgImgsShouldBePicked: 40,\n    fmImgsShouldBePicked: 5\n  }\n};\n\nconst TLTY_CONFIG: ConfigService.Config = {\n  doc: {\n    title: \"<3 Tony & Claire <3\"\n  },\n  firebase: {\n    apiKey: \"AIzaSyD_1irJWOgT9x5fvmbXJm0fRRRZ8DNUfpU\",\n    authDomain: \"weddi-app.firebaseapp.com\",\n    databaseURL: \"https://weddi-app.firebaseio.com/\",\n    projectId: \"weddi-app\",\n    storageBucket: \"image.weddi.app\",\n    messagingSenderId: \"324415165027\",\n    appId: \"1:324415165027:web:76b8291835ef32c5c75e56\"\n  },\n  post: {\n    namespace: \"tlty\",\n  },\n  img: {\n    namespace: \"tlty\",\n    bgImgsShouldBePicked: 30,\n    fmImgsShouldBePicked: 5\n  }\n};\n\nconst YKYL_CONFIG: ConfigService.Config = {\n  doc: {\n    title: \"<3 呱呱 & 以練 <3\"\n  },\n  firebase: {\n    apiKey: \"AIzaSyD_1irJWOgT9x5fvmbXJm0fRRRZ8DNUfpU\",\n    authDomain: \"weddi-app.firebaseapp.com\",\n    databaseURL: \"https://weddi-app.firebaseio.com/\",\n    projectId: \"weddi-app\",\n    storageBucket: \"image.weddi.app\",\n    messagingSenderId: \"324415165027\",\n    appId: \"1:324415165027:web:76b8291835ef32c5c75e56\"\n  },\n  post: {\n    namespace: \"ykyl\",\n  },\n  img: {\n    namespace: \"ykyl\",\n    bgImgsShouldBePicked: 28,\n    fmImgsShouldBePicked: 5\n  }\n};\n\nconst TEST_CONFIG: ConfigService.Config = {\n  doc: {\n    title: \"<3 Groom & Bride <3\"\n  },\n  firebase: {\n    apiKey: \"AIzaSyD_1irJWOgT9x5fvmbXJm0fRRRZ8DNUfpU\",\n    authDomain: \"weddi-app.firebaseapp.com\",\n    databaseURL: \"https://weddi-app.firebaseio.com/\",\n    projectId: \"weddi-app\",\n    storageBucket: \"image.weddi.app\",\n    messagingSenderId: \"324415165027\",\n    appId: \"1:324415165027:web:76b8291835ef32c5c75e56\"\n  },\n  post: {\n    namespace: \"test\",\n  },\n  img: {\n    namespace: \"chyy\",\n    bgImgsShouldBePicked: 40,\n    fmImgsShouldBePicked: 5\n  }\n};\n\nconst getConfigById = (gnbId: string): ConfigService.Config => {\n  switch (gnbId) {\n    case \"chyy\":\n      return CHYY_CONFIG;\n    case \"tlty\":\n      return TLTY_CONFIG;\n    case \"ykyl\":\n      return YKYL_CONFIG;\n    default:\n      return TEST_CONFIG;\n  }\n};\n\nclass ConfigService implements ConfigServiceInterface {\n  private _config: ConfigService.Config | null = null;\n\n  public init(gnbId: string): void {\n    if (this._config === null) {\n      this._config = getConfigById(gnbId);\n    }\n  }\n\n  public get config(): ConfigService.Config {\n    if (this._config === null) {\n      throw Error(\"config is not set yet\");\n    }\n    return this._config;\n  }\n}\n\n// Singleton\nconst configService: ConfigServiceInterface = new ConfigService();\n\nexport default configService;\n","const random = (a = 1, b = 0): number => {\n  const lower = Math.ceil(Math.min(a, b));\n  const upper = Math.floor(Math.max(a, b));\n  return Math.floor(lower + Math.random() * (upper - lower + 1));\n};\n\nexport const combinationList = <T>(list: T[] , k: number): T[] => {\n  const result: T[] = [];\n  /* select k elements n-k <= i < n */\n  for (let i = list.length - k; i < list.length; i++) {\n    /* A random integer such that 0 <= j < i */\n    const j = random(i);\n    /* Select element j if element j is not selected yet */\n    /* Otherwise select element i */\n    if (result.includes(list[j])) {\n      result.push(list[i]);\n    } else {\n      result.push(list[j]);\n    }\n  }\n  return result;\n};\n\nexport const permutationList = <T>(list: T[]): T[] => {\n  for (let i = 0; i <= list.length - 2; i++) {\n    /* A random integer such that i <= j < n */\n    const j = random(i, list.length - 1);\n    /* Swap the randomly picked element with list[i] */\n    [list[i], list[j]] = [list[j], list[i]];\n  }\n  return list;\n};\n","import firebase from 'firebase/app';\n\nimport configService from '../services/configService';\n\nexport const listPosts = (database: firebase.database.Database) => (joinedGame = false): Promise<{[id: string]: WeddiApp.Post.Data} | null> => {\n  let postRef: firebase.database.Query = database.ref(`${configService.config.post.namespace}/posts`);\n  if (joinedGame) {\n    postRef = postRef.orderByChild('joinedGame').equalTo(true);\n  }\n  return postRef\n    .once('value')\n    .then(snapshot => snapshot.val());\n};\n\nexport const writePost = (database: firebase.database.Database) => (postData: WeddiApp.Post.UserInput): Promise<WeddiApp.Post.Data> => {\n  const postId = database.ref(`${configService.config.post.namespace}/posts`).push().key;\n  if (!postId) {\n    throw new Error('post id is empty');\n  }\n  const wrappedPostData: WeddiApp.Post.Data = {\n    ...postData,\n    modifiedTime: new Date().toISOString(),\n    userAgent: navigator.userAgent,\n    id: postId\n  };\n  return database\n    .ref(`${configService.config.post.namespace}/posts`)\n    .child(postId)\n    .set(wrappedPostData);\n};\n\nexport const onNewPost = (database: firebase.database.Database) => (callback: (post: WeddiApp.Post.Data) => any): void => {\n  const postRef = database.ref(`${configService.config.post.namespace}/posts`);\n  postRef.on('child_added', (data: firebase.database.DataSnapshot) => {\n    callback(data.val());\n  });\n};\n\nexport const listAllImages = (storage: firebase.storage.Storage) => (size: 'small' | 'regular' = 'small') => {\n  return storage.ref(configService.config.img.namespace).child(size).listAll()\n    .then(listResult => Promise.all(listResult.items.map(item => item.getDownloadURL())));\n};\n\nexport const uploadImage = (storage: firebase.storage.Storage) => (imgName: string, image: Blob): firebase.storage.UploadTask => {\n  return storage\n    .ref(configService.config.img.namespace)\n    .child('public_upload')\n    .child(imgName)\n    .put(image);\n};\n","import { createContext } from 'react';\nimport firebase from 'firebase';\n\nexport interface FirebaseContextType {\n  app: firebase.app.App;\n  database: firebase.database.Database;\n  storage: firebase.storage.Storage;\n}\n\nexport const FirebaseContext = createContext<FirebaseContextType>({} as FirebaseContextType);\n","import firebase from 'firebase/app';\nimport 'firebase/storage';\nimport 'firebase/database';\nimport React, { useMemo } from 'react';\nimport { FirebaseContext } from './context';\nexport interface Props {\n  firebaseConfig?: Record<string, any>;\n  appName?: string;\n}\n\nconst DEFAULT_APP_NAME = '[DEFAULT]';\n\nconst shallowEqual = (a: Record<string, any>, b: Record<string, any>): boolean =>\n  a === b || [...Object.keys(a), ...Object.keys(b)].every(key => a[key] === b[key]);\n\nexport const FirebaseAppProvider = (props: Props & { [key: string]: unknown }) => {\n  const { firebaseConfig, appName } = props;\n  const value = useMemo(() => {\n    if (!firebaseConfig) {\n      throw new Error('No config provided');\n    }\n    const existingApp = firebase.apps.find(app => app.name === (appName || DEFAULT_APP_NAME));\n    if (existingApp && shallowEqual(existingApp.options, firebaseConfig)) {\n      return {\n        app: existingApp,\n        storage: firebase.storage(existingApp),\n        database: firebase.database(existingApp),\n      };\n    }\n\n    const app = firebase.initializeApp(firebaseConfig, appName);\n    const storage = firebase.storage();\n    const database = firebase.database();\n    return {\n      app,\n      storage,\n      database\n    };\n  }, [firebaseConfig, appName]);\n  return (\n    <FirebaseContext.Provider value={value} {...props} />\n  );\n};\n","import { useContext } from 'react';\nimport { FirebaseContext, FirebaseContextType } from './context';\n\nexport const useDatabase = (): FirebaseContextType['database'] => {\n  return useContext(FirebaseContext).database;\n};\n\nexport const useStorage = (): FirebaseContextType['storage'] => {\n  return useContext(FirebaseContext).storage;\n};\n","import React, { useState } from 'react';\n\ninterface Props {\n  imgUrls: string[];\n  onChange?: (imgUrl: string) => void;\n  disabled?: boolean;\n}\n\nexport const ImagePicker = ({ imgUrls, onChange, disabled }: Props) => {\n  const totalImages = imgUrls.length;\n  const [pickerIndex, setPickerIndex] = useState(0);\n\n  const renderPhotoRadios = () => imgUrls.map((url, i) => {\n    const checked = pickerIndex === i;\n    return (\n      <React.Fragment key={url}>\n        <input hidden type=\"radio\" name=\"imgUrl\" value={url} checked={checked} readOnly />\n        <div className={`layer ${checked ? '' : ' hidden'}`} style={{ backgroundImage: `url(${url})` }} />\n        <img className={`fade ${checked ? '' : ' hidden'}`} src={url} alt={url} />\n      </React.Fragment>\n    );\n  });\n\n  const plusImgIdx = (i: number): void => {\n    const nextIdx = (pickerIndex + i + totalImages) % totalImages;\n\n    setPickerIndex(nextIdx);\n    if (onChange) {\n      onChange(imgUrls[nextIdx]);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <div className=\"img-window\">\n        <div className=\"numbertext\">{pickerIndex + 1} / {totalImages}</div>\n        {renderPhotoRadios()}\n      </div>\n      <span className=\"prev\" onClick={() => !disabled && plusImgIdx(-1)}>&#10094;</span>\n      <span className=\"next\" onClick={() => !disabled && plusImgIdx(1)}>&#10095;</span>\n    </React.Fragment>\n  );\n};\n","import React, { ChangeEventHandler, useState } from 'react';\nimport loadImage from 'blueimp-load-image';\n\ninterface Props {\n  disabled?: boolean;\n  onChange?: (blob: Blob | null) => void;\n}\n\nexport const ImageUploader = ({ disabled, onChange }: Props) => {\n  const [upload, setUpload] = useState<Blob | null>(null);\n\n  const onFileChangeHandler: ChangeEventHandler<HTMLInputElement> = (event): void => {\n    const target = event.target;\n    const key = event.target.name;\n    const value = target.files && target.files[0];\n    if (key && value && value.type.startsWith('image/')) {\n      loadImage(\n        value,\n        (canvas) => (canvas as HTMLCanvasElement).toBlob((blob) => {\n          setUpload(blob);\n          if(onChange) {\n            onChange(blob);\n          }\n        }, 'image/jpeg', 0.75),\n        { maxWidth: 2048, maxHeight: 2048, orientation: true, canvas: true, noRevoke: true }\n      );\n    }\n  };\n\n  return (\n    <label className=\"img-window upload\">\n      <input\n        hidden\n        type=\"file\"\n        name=\"upload\"\n        placeholder=\"上傳照片\"\n        accept=\"image/*\"\n        onChange={onFileChangeHandler}\n        disabled={disabled}\n      />\n      {upload && <img src={URL.createObjectURL(upload)} alt=\"upload preview\" />}\n      {!upload && <span className=\"upload-field\">請上傳圖片</span>}\n    </label>\n  );\n};\n","import React, { useState, ChangeEventHandler, FormEventHandler, useEffect } from 'react';\nimport uuid from 'uuid';\nimport './greeting.scss';\n\nimport configService from '../services/configService';\nimport { combinationList } from '../utils/random';\nimport loadingIcon from '../images/uploadLoading.svg';\nimport { listAllImages, uploadImage, writePost } from '../api';\nimport { useDatabase, useStorage } from '../Provider/FirebaseApp';\nimport { ImagePicker } from './ImagePicker';\nimport { ImageUploader } from './ImageUploader';\n\ninterface Props {\n  onSubmit?: (formData: WeddiApp.Post.UserInput) => void;\n}\n\nexport const GreetingForm: React.FC<Props> = ({ onSubmit }) => {\n  const [isProcessing, setIsProcessing] = useState(false);\n\n  const [form, setForm] = useState({\n    name: '',\n    greetings: '',\n  });\n  const [isUploadPage, setIsUploadPage] = useState(false);\n\n  const [imgUrls, setImgUrls] = useState<string[]>([]);\n  const [pickedImg, setPickedImg] = useState('');\n  const [uploadImg, setUploadImg] = useState<Blob | null>(null);\n\n  const database = useDatabase();\n  const storage = useStorage();\n\n  useEffect(() => {\n    listAllImages(storage)().then(imageUrls => {\n      const imgCandidates = combinationList(imageUrls, configService.config.img.fmImgsShouldBePicked);\n      setImgUrls(imgCandidates);\n      setPickedImg(imgCandidates[0]);\n    });\n  }, [storage]);\n\n  const onTextChangeHandler: ChangeEventHandler<HTMLInputElement | HTMLTextAreaElement> = (event) => {\n    const key = event.target.name;\n    const value = event.target.value.trim();\n    setForm((form) => ({ ...form, [key]: value }));\n  };\n\n  const onSubmitHandler: FormEventHandler = (event) => {\n    event.preventDefault();\n    const isValid = () => {\n      const { name, greetings } = form;\n      return name.trim() !== '' && greetings.trim() !== '' && (pickedImg || uploadImg);\n    };\n    if (isValid()) {\n      const uploadFlow = async () => {\n        setIsProcessing(true);\n        let imgUrl = pickedImg;\n        if (isUploadPage && uploadImg) {\n          const imgName = uuid.v4();\n          const uploadProc = await uploadImage(storage)(imgName, uploadImg);\n          imgUrl = await uploadProc.ref.getDownloadURL();\n        }\n\n        const input: WeddiApp.Post.UserInput = {\n          name: form.name,\n          greetings: form.greetings,\n          joinedGame: true,\n          imgUrl,\n        };\n\n        await writePost(database)(input);\n\n        setPickedImg(imgUrl);\n        setIsProcessing(false);\n\n        if (onSubmit) {\n          onSubmit(input);\n        }\n      };\n      return uploadFlow();\n    }\n  };\n\n  const onPickerClick = () => {\n    if (!isProcessing) {\n      setIsUploadPage(false);\n    }\n  };\n\n  const onPickerChange = (imgUrl: string) => {\n    setPickedImg(imgUrl);\n  };\n\n  const onUploaderClick = () => {\n    if (!isProcessing) {\n      setIsUploadPage(true);\n    }\n  };\n\n  const onUploaderChange = (blob: Blob | null) => {\n    setUploadImg(blob);\n  };\n\n  return (\n    <form className=\"greeting-form\" onSubmit={onSubmitHandler}>\n      <ul className=\"tabs-view\">\n        <li\n          className={`pick ${isUploadPage ? '' : 'active'}`}\n          onClick={onPickerClick}\n        >\n          挑一張照片\n        </li>\n        <li\n          className={`pick ${isUploadPage ? 'active' : ''}`}\n          onClick={onUploaderClick}\n        >\n          上傳一張照片\n        </li>\n      </ul>\n      <div className=\"slideshow-container\">\n        <div hidden={!isUploadPage}>\n          <ImageUploader disabled={isProcessing} onChange={onUploaderChange} />\n        </div>\n        <div hidden={isUploadPage}>\n          <ImagePicker disabled={isProcessing} imgUrls={imgUrls} onChange={onPickerChange} />\n        </div>\n      </div>\n      <div className=\"greeting-message-block\">\n        <label className=\"input\">\n          <h2>@</h2>\n          <input type=\"text\" name=\"name\" placeholder=\"姓名\" onChange={onTextChangeHandler} required disabled={isProcessing} />\n        </label>\n        <label className=\"input\">\n          <textarea name=\"greetings\" placeholder=\"祝賀詞\" onChange={onTextChangeHandler} required disabled={isProcessing} />\n        </label>\n      </div>\n      <button className=\"btn\" type=\"submit\" disabled={isProcessing}>\n        {isProcessing && <img className=\"loading-img\" src={loadingIcon} alt=\"\" />}\n        留言\n      </button>\n    </form>\n  );\n};\n","import React, { useState, useEffect, useRef } from 'react';\nimport './board.scss';\n\nconst Dialog = ({ user, show }) => {\n  const [loading, setLoading] = useState(false);\n  const imgRef = useRef();\n\n  useEffect(() => {\n    // while image url changes set to loading\n    if (user.imgUrl) {\n      setLoading(true);\n    }\n  }, [user.imgUrl]);\n\n  const onLoad = () => {\n    setLoading(false);\n  };\n\n  const mayMobile = window.innerWidth < 1000;\n  const verticalImg = !loading && imgRef.current && imgRef.current.clientWidth < imgRef.current.clientHeight;\n  const modalStyle = (!loading && mayMobile && verticalImg) ? { margin: '10% 20% 50px' } : {};\n\n  return (\n    <div className={`dialog ${show && !loading ? \"show-dialog\" : \"\"}`}>\n      <div className=\"modal-sm\" style={modalStyle}>\n        <div className=\"image-container\">\n          <img ref={imgRef} className=\"user-image\" src={user.imgUrl} alt=\"images\" onLoad={onLoad} />\n        </div>\n        <div className=\"message\">\n          <h2>@ {user.name}</h2>\n          <p>{user.greetings}</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Dialog;\n","export const getUpperUrl = (matchUrl: string): string => {\n  const paths = matchUrl.split('/');\n  paths.pop();\n  return paths.join('/');\n};\n","import React, { useState } from 'react';\nimport './greeting.scss';\n\nimport { GreetingForm } from './GreetingForm';\nimport Dialog from '../Board/Dialog';\nimport { getUpperUrl } from '../utils/urlHelpers';\n\nconst Greeting = (props) => {\n  const [modalDisplay, setModalDisplay] = useState(false);\n\n  const [user, setUser] = useState({ name: '', greetings: '', imgUrl: '' });\n  const onSubmit = (formData) => {\n    setUser(formData);\n    setModalDisplay(true);\n    setTimeout(() => { props.history.push(getUpperUrl()); }, 5000);\n  };\n\n  return (\n    <div className=\"greeting\">\n      <header className=\"greeting-header\">\n        <h1 className=\"greeting-title orange-font\">祝福留言版</h1>\n      </header>\n      {!modalDisplay && <GreetingForm onSubmit={onSubmit} />}\n      {!modalDisplay && <a className=\"link orange-font\" href={getUpperUrl(props.match.url)}>去照片牆瞧瞧</a>}\n      <Dialog user={user} show={modalDisplay} />\n    </div>\n  );\n};\n\nexport default Greeting;\n","export const preloadImage = (url: string, callback: (img: HTMLImageElement) => void): void => {\n  const img = new Image();\n  img.src = url;\n  img.onload = (): void => callback(img);\n};\n\nexport const preloadImageAsync = (url: string): Promise<HTMLImageElement> => {\n  return new Promise(resolve => {\n    preloadImage(url, resolve);\n  });\n};\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport './lottery.scss';\n\nimport { useDatabase } from '../Provider/FirebaseApp';\nimport { listPosts } from '../api';\nimport { permutationList } from '../utils/random';\nimport { getUpperUrl } from '../utils/urlHelpers';\n\nenum Stage {\n  Init,\n  Loaded,\n  Start,\n  Flipped,\n  Stacked,\n  Shuffling,\n  Shuffled,\n  Ready,\n  Error,\n}\n\nexport const Lottery: React.FC<RouteComponentProps> = (props) => {\n  const database = useDatabase();\n  const [posts, setPosts] = useState<WeddiApp.Post.Data[]>([]);\n  const [stage, setStage] = useState<Stage>(Stage.Init);\n\n  useEffect(() => {\n    listPosts(database)(true).then(postsDictionary => {\n      if (postsDictionary === null) {\n        // TODO: enable retry\n        setStage(Stage.Error);\n        return;\n      }\n      const posts = Object.keys(postsDictionary).map(key => postsDictionary[key]);\n      const shuffledPosts = permutationList(posts);\n      setPosts(shuffledPosts);\n      setStage(Stage.Loaded);\n    });\n  }, [database]);\n\n  const [isExpanding, setIsExpanding] = useState(true);\n  const [isShuffling, setIsShuffling] = useState(false);\n  const [revealedIds, setRevealedIds] = useState<Record<string, boolean>>({ '*': true });\n\n  const onToggleFlipAll = useCallback(() => {\n    setRevealedIds(ids => {\n      if (ids['*']) { return { '*': false }; }\n      return { '*': true };\n    });\n  }, []);\n  const onFlipOne = useCallback((index: number) => {\n    setRevealedIds(ids => {\n      return {\n        ...ids,\n        [index]: true,\n      };\n    });\n  }, []);\n\n  const onToggleExpand = useCallback(() => {\n    setIsExpanding(expanding => !expanding);\n  }, []);\n  const onToggleShuffle = useCallback((callback = null) => {\n    setIsShuffling(true);\n    const timeout = setTimeout(() => {\n      setPosts(posts => permutationList(posts));\n      setIsShuffling(false);\n      clearTimeout(timeout);\n      if (callback) {\n        callback();\n      }\n    }, 1200 * 3);\n  }, []);\n\n  useEffect(() => {\n    switch(stage) {\n      case Stage.Start: {\n        onToggleFlipAll();\n        setStage(Stage.Flipped);\n        return;\n      }\n      case Stage.Flipped: {\n        onToggleExpand();\n        setStage(Stage.Stacked);\n        return;\n      }\n      case Stage.Stacked: {\n        onToggleShuffle(() => setStage(Stage.Shuffled));\n        setStage(Stage.Shuffling);\n        return;\n      }\n      case Stage.Shuffled: {\n        onToggleExpand();\n        setStage(Stage.Ready);\n        return;\n      }\n    }\n  }, [stage, onToggleFlipAll, onToggleExpand, onToggleShuffle]);\n\n  const onGoBtnClick = useCallback(() => {\n    if (stage === Stage.Loaded) {\n      setStage(Stage.Start);\n    }\n  }, [stage]);\n\n  const onResetBtnClick = useCallback(() => {\n    setIsExpanding(true);\n    setIsShuffling(false);\n    setRevealedIds({ '*': true });\n    setStage(Stage.Loaded);\n  }, [setIsExpanding, setIsShuffling, setRevealedIds, setStage]);\n\n  const allCards = posts.map((post, index) => (\n    <li key={post.id} className=\"card\" onClick={() => onFlipOne(index)}>\n      <div className={`inner ${revealedIds['*'] || revealedIds[index] ? '' : 'flip-transition'}`}>\n        <div className=\"front\">{post.name}</div>\n        <div className=\"back\">{isExpanding ? index + 1 : ''}</div>\n      </div>\n    </li>)\n  );\n\n  const size = Math.min(10, Math.floor(Math.sqrt(allCards.length)));\n\n  const stacks = [];\n  while (allCards.length > 0) {\n    const cards = allCards.splice(0, size);\n    stacks.push((\n      <li key={`stack-${stacks.length}`} className=\"stack\">\n        <ul className=\"cards-down\">\n          {cards}\n        </ul>\n      </li>\n    ));\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"message\">\n        { stage === Stage.Init ? 'Loading...' : '' }\n        { stage === Stage.Error ? '現在還沒有玩家喔！' : '' }\n      </div>\n      <div className=\"lottery-btns\">\n        <button className={stage === Stage.Loaded ? 'show' : 'hide'} onClick={onGoBtnClick}>洗牌</button>\n        <button className={stage === Stage.Ready ? 'show' : 'hide' } onClick={onResetBtnClick}>重置</button>\n      </div>\n      <ul className={`card-stacks ${isExpanding ? 'expand-transition' : ''} ${isShuffling ? 'shuffle-transition' : ''}`}>{stacks}</ul>\n      <a className=\"home-link\" href={getUpperUrl(props.match.url)}>回首頁</a>\n    </div>\n  );\n};\n","import firebase from 'firebase';\nimport { listPosts, onNewPost } from '../api';\nimport { newHeap } from '../utils/priorityQueue';\n\ninterface HeapNode {\n  priority: number;\n  timestampId: string;\n}\n\n/**\n * Create a queue for upcoming new feeds\n * There are two kinds of feeds in the queue, 1. feeds from pool 2. feeds from push event\n * We would like to pop the feeds in follows order untill the queue is empty:\n * [earliest pushed feed -> latest pushed feed -> earliest pool feed -> latest pool feed\n * once the pushed feed is popped from queue, it will be considered a pool feed\n *\n * When the queue is empty, it should refill the queue with feeds from pool.\n * The queue will be simplify down to a time-based queue if there is no pushed feed in the it.\n * The order of the popped feed will be [earliest pool feed -> latest pool feed]\n *\n * Implementation: priority queue (min heap)\n * The element in priority queue has members (priority: int, timestamp: string)\n * priority is 0 in pushed feed and 1 in pool feed\n * The element i is higher priority than j when\n *  1. i's priority < j's priority\n *  2. i's priority = j's priority and i's timestamp < j's timestamp\n */\nconst newHeapNode = (priority: number, timestampId: string): HeapNode => ({ priority, timestampId });\nconst heap = newHeap<HeapNode>((node1, node2) => {\n  if (node1.priority < node2.priority) {\n    return true;\n  }\n  if (node1.priority === node2.priority && node1.timestampId < node2.timestampId) {\n    return true;\n  }\n  return false;\n});\n\ntype PostListener = (post: WeddiApp.Post.Data) => any;\ntype UnsubscribeFn = () => void;\n\nexport const subscribePost = (database: firebase.database.Database) => (listener: PostListener): UnsubscribeFn => {\n  const postsPool: {[timestampId: string]: WeddiApp.Post.Data} = {};\n  let feeds: HeapNode[] = [];\n  listPosts(database)().then(posts => {\n    if (posts === null) {\n      return;\n    }\n    Object.keys(posts).forEach(id => {\n      postsPool[id] = posts[id];\n    });\n  }).then(() => {\n    onNewPost(database)((post: WeddiApp.Post.Data) => {\n      if (!postsPool[post.id]) {\n        postsPool[post.id] = post;\n        heap.push(feeds, newHeapNode(0, post.id));\n      }\n    });\n  });\n\n  const interval = setInterval(() => {\n    if (feeds.length === 0) {\n      // refill feeds with pool feeds\n      feeds = Object.keys(postsPool).map(postId => newHeapNode(1, postId));\n      heap.init(feeds);\n    }\n    const nextFeed = heap.pop(feeds);\n    if (nextFeed) {\n      listener(postsPool[nextFeed.timestampId]);\n    }\n  }, 8000);\n\n  const unsubscribe: UnsubscribeFn = () => {\n    clearInterval(interval);\n    // TODO: unsub API\n  };\n  return unsubscribe;\n};\n","/**\n * Min heap creator\n *\n * @param lessFn\n * @returns\n */\nexport const newHeap = <T>(lessFn: (node1: T, node2: T) => boolean) => {\n  const half = (n: number): number => Math.floor(n / 2);\n  const parent = (id: number): number => Math.floor((id - 1) / 2);\n  const children = (id: number): [number, number] => [2 * id + 1, 2 * id + 2];\n  const less = (array: T[], idx1: number, idx2: number): boolean => lessFn(array[idx1], array[idx2]);\n  const swap = (array: T[], idx1: number, idx2: number): void => {\n    [array[idx1], array[idx2]] = [array[idx2], array[idx1]];\n  };\n  const heapify = (array: T[], idx: number): void => {\n    let currentIdx = idx;\n    while (currentIdx < half(array.length)) {\n      // left child id is 2i+1 and right child id is 2i+2. We claim left child is always in heap but right child is not.\n      // Reason: index i is less than half size of the heap (i.e. i <= [n/2]-1) so left child 2i+1 <= 2[n/2] - 1 <= n-1 < n\n      // However, right child of index is 2i+2 <= 2[n/2] <= n. It is not in the heap when equal holds.\n      const [leftChildIdx, rightChildIdx] = children(currentIdx);\n      // find the smallest child\n      let childIdx = leftChildIdx;\n      if (rightChildIdx < array.length && less(array, rightChildIdx, childIdx)) {\n        childIdx = rightChildIdx;\n      }\n      // if current node is less than smallest child, stop downward swapping\n      if (less(array, currentIdx, childIdx)) {\n        break;\n      }\n      swap(array, currentIdx, childIdx);\n      currentIdx = childIdx;\n    }\n  };\n  return {\n    init: (array: T[]): void => {\n      for (let i = half(array.length) - 1; i >= 0; i--) {\n        heapify(array, i);\n      }\n    },\n    push: (array: T[], element: T): void => {\n      array.push(element);\n      let currentIdx = array.length - 1;\n      // current index is not root\n      while (currentIdx !== 0) {\n        const parentIdx = parent(currentIdx);\n        // if parent node is less than current node. stop upward swapping\n        if (less(array, parentIdx, currentIdx)) {\n          break;\n        }\n        swap(array, parentIdx, currentIdx);\n        currentIdx = parentIdx;\n      }\n    },\n    pop: (array: T[]): T | undefined => {\n      if (array.length === 0) {\n        return undefined;\n      }\n      swap(array, 0, array.length - 1);\n      const result = array.pop();\n      heapify(array, 0);\n      return result;\n    }\n  };\n};\n","import React, { useState, useEffect } from 'react';\nimport { RouteComponentProps } from 'react-router';\nimport { useDatabase } from '../Provider/FirebaseApp';\nimport './board.scss';\nimport Dialog from './Dialog';\nimport { Background } from './Background';\nimport { subscribePost } from './subscribePost';\n\nconst Board: React.FC<RouteComponentProps> = (props) => {\n  const [modalDisplay, setModalDisplay] = useState(false);\n  const [user, setUser] = useState({});\n  const database = useDatabase();\n\n  useEffect(() => {\n    // subscribe post while component did mount\n    const unsubscribe = subscribePost(database)((user) => {\n      if (user) {\n        setUser(user);\n        const displayAndHide = () => {\n          setModalDisplay(true);\n\n          setTimeout(() => {\n            setModalDisplay(false);\n          }, 5000);\n        };\n        displayAndHide();\n      }\n    });\n    return () => {\n      // unsubscribe post while component will unmount\n      unsubscribe();\n    };\n  }, [database]);\n\n  return (\n    <React.Fragment>\n      <Background />\n      <Dialog user={user} show={modalDisplay} />\n      <a className=\"message-link\" href={`${props.match.url}/greetings`}>&lt;&lt; 留下你的祝福</a>\n      <a className=\"game-link\" href={`${props.match.url}/lottery`}>去遊戲頁</a>\n    </React.Fragment>\n  );\n};\n\nexport default Board;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Greeting from './Greeting';\nimport Board from './Board';\nimport { Lottery } from './Lottery/Lottery';\nimport configService from './services/configService';\nimport { FirebaseAppProvider } from './Provider/FirebaseApp';\n\nconst setTitle = (title) => document.title = title;\n\nconst App = ({ match }) => {\n  configService.init(match.params.gnbId);\n  setTitle(configService.config.doc.title);\n  const path = match.url;\n  return (\n    <FirebaseAppProvider firebaseConfig={configService.config.firebase}>\n      <Switch>\n        <Route path={`${path}/lottery`} component={Lottery} />\n        <Route path={`${path}/greetings`} component={Greeting} />\n        <Route path={path} component={Board} />\n      </Switch>\n    </FirebaseAppProvider>\n  );\n};\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nconst Home = () => (<div>Weddi App</div>);\n\nconst Root = () => {\n  return (\n    <Router basename={process.env.PUBLIC_URL} forceRefresh>\n      <Switch>\n        <Route path=\"/:gnbId/\" component={App} />\n        <Route path=\"/\" component={Home} />\n      </Switch>\n    </Router>\n  );\n};\n\nReactDOM.render(<Root />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}