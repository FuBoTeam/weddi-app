{"version":3,"sources":["images/loading.gif","configs.js","utils/random.js","images/index.js","Board/Dialog.js","api/index.js","Greeting/index.js","Board/queue.js","Board/index.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","config","CHYY_CONFIG","doc","title","db","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","img","endpoint","totalImgs","bgImgsShouldBePicked","fmImgsShouldBePicked","TLTY_CONFIG","TEST_CONFIG","init","gnbId","setConfigById","getDocConfig","getDBConfig","getImgConfig","combinationList","list","k","result","i","length","j","random","includes","push","permutationList","getImageUrl","key","size","Configs","Dialog","Image","t","onload","setState","imgWidth","width","imgHeight","height","state","this","src","props","show","user","imgUrl","mayMobile","window","innerWidth","verticalImg","modalStyle","margin","className","style","alt","name","greetings","Component","api","apiBase","app","firebase","database","postData","postId","getDB","ref","child","wrappedPostData","modifiedTime","Date","toISOString","userAgent","navigator","id","set","callback","on","data","val","Greeting","allImgUrls","range","map","imgUrls","form","imgPicked","modalDisplay","onTextChangeHandler","bind","onSubmitHandler","isValid","setImgIdx","plusImgIdx","paths","match","url","split","pop","join","event","preventDefault","target","value","trim","Api","then","setTimeout","history","getUpperUrl","nextIdx","picRadios","checked","display","type","onChange","required","border","onSubmit","onClick","placeholder","href","Queue","q","element","splice","Board","bgImgUrls","intervals","isLoading","isBgSwitching","showDialog","Object","assign","pickUpFeed","newFeeds","oldFeeds","nextFeed","isEmpty","setInterval","clearInterval","loadingIcon","bgImgUrl","idx","App","params","document","path","component","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","Home","ReactDOM","render","basename","process","forceRefresh","getElementById","URL","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"qHAAAA,EAAOC,QAAU,IAA0B,qC,yHC0EvCC,E,8HA1EEC,G,MAAc,CAClBC,IAAK,CACHC,MAAO,yBAETC,GAAI,CACFC,OAAQ,0CACRC,WAAY,4BACZC,YAAa,oCACbC,UAAW,YACXC,cAAe,wBACfC,kBAAmB,eACnBC,MAAO,6CAETC,IAAK,CACHC,SAAU,uDACVC,UAAW,IACXC,qBAAsB,GACtBC,qBAAsB,KAIpBC,EAAc,CAClBf,IAAK,CACHC,MAAO,2CAETC,GAAI,CACFC,OAAQ,0CACRC,WAAY,4BACZC,YAAa,yCACbC,UAAW,YACXC,cAAe,wBACfC,kBAAmB,eACnBC,MAAO,6CAETC,IAAK,CACHC,SAAU,uDACVC,UAAW,GACXC,qBAAsB,GACtBC,qBAAsB,IAIpBE,EAAc,CAClBhB,IAAK,CACHC,MAAO,uBAETC,GAAI,CACFC,OAAQ,0CACRC,WAAY,4BACZC,YAAa,yCACbC,UAAW,YACXC,cAAe,wBACfC,kBAAmB,eACnBC,MAAO,6CAETC,IAAK,CACHC,SAAU,uDACVC,UAAW,IACXC,qBAAsB,GACtBC,qBAAsB,IA4BX,GACbG,KAZW,SAAAC,GAIX,OAHKpB,IACHA,EAfkB,SAAAoB,GACpB,OAAQA,GACN,IAAK,OACH,OAAOnB,EACT,IAAK,OACH,OAAOgB,EACT,QACE,OAAOC,GAQAG,CAAcD,IAElBpB,GASPsB,aANmB,kBAAMtB,EAAOE,KAOhCqB,YANkB,kBAAMvB,EAAOI,IAO/BoB,aANmB,kBAAMxB,EAAOY,M,iBCnFrBa,EAAkB,SAACC,EAAMC,GAGpC,IAFA,IAAMC,EAAS,GAENC,EAAIH,EAAKI,OAASH,EAAGE,EAAIH,EAAKI,OAAQD,IAAK,CAElD,IAAME,EAAIC,IAAOH,GAGbD,EAAOK,SAASP,EAAKK,IACvBH,EAAOM,KAAKR,EAAKG,IAEjBD,EAAOM,KAAKR,EAAKK,IAGrB,OAAOH,GAGIO,EAAkB,SAAAT,GAC7B,IAAK,IAAIG,EAAI,EAAGA,GAAKH,EAAKI,OAAS,EAAGD,IAAK,CAEzC,IAAME,EAAIC,IAAOH,EAAGH,EAAKI,OAAS,GAFO,EAIpB,CAACJ,EAAKK,GAAIL,EAAKG,IAAnCH,EAAKG,GAJmC,KAI/BH,EAAKK,GAJ0B,KAM3C,OAAOL,GCrBIU,EAAc,SAACC,GAAD,IAAMC,EAAN,uDAHR,SAGQ,gBACtBC,EAAQf,eAAeX,UADD,OACYwB,GADZ,OACkBC,EADlB,SCFNE,G,kBACnB,aAAe,IAAD,uBACZ,+CACK5B,IAAO,IAAI6B,MAChB,IAAMC,EAAC,eAHK,OAIZ,EAAK9B,IAAI+B,OAAS,WAAY,IAAD,OAC3BD,EAAEE,UAAS,iBAAO,CAChBC,SAAU,EAAKC,OAAS,EACxBC,UAAW,EAAKC,QAAU,OAG9B,EAAKC,MAAQ,CACXJ,SAAU,EACVE,UAAW,GAZD,E,kFAiBZG,KAAKtC,IAAIuC,IAAMD,KAAKE,MAAMC,KAAOH,KAAKE,MAAME,KAAKC,OAAS,K,+BAGlD,IAAD,EACgBL,KAAKE,MAApBE,EADD,EACCA,KAAMD,EADP,EACOA,KAERG,EAAYC,OAAOC,WAAa,IAChCC,EAAcT,KAAKD,MAAMJ,SAAWK,KAAKD,MAAMF,UAC/Ca,EAAcP,GAAQG,GAAaG,EAAe,CAAEE,OAAQ,gBAAmB,GAErF,OACE,yBAAKC,UAAWT,EAAO,qBAAuB,UAC5C,yBAAKS,UAAU,WAAWC,MAAOH,GAC/B,yBAAKE,UAAU,mBACb,yBAAKA,UAAU,aAAaX,IAAKG,EAAKC,OAAQS,IAAI,YAEpD,yBAAKF,UAAU,WACb,iCAAOR,EAAKW,MACZ,2BAAIX,EAAKY,kB,GApCeC,c,gPCahCC,EAXEC,E,WACJ,aAAgB,oBACdnB,KAAKoB,IAAMC,gBAAuBhC,EAAQhB,eAC1C2B,KAAKqB,SAAWA,EAChBrB,KAAKsB,SAAWD,a,oDAGhB,OAAOrB,KAAKsB,a,KA+BD,EAzBF,WAIX,OAHKJ,IACHA,EAAM,IAAIC,GAELD,GAqBM,EAlBG,SAACK,GACjB,IAAMC,EAASN,EAAIO,QAAQC,MAAMC,MAAM,SAAS3C,OAAOG,IACjDyC,E,yVAAe,IAChBL,EADgB,CAEnBM,cAAc,IAAIC,MAAOC,cACzBC,UAAWC,UAAUD,UACrBE,GAAIV,IAEN,OAAON,EAAIO,QAAQC,IAAZ,gBAAyBF,IAAUW,IAAIP,IAUjC,EAPC,SAACQ,GACClB,EAAIO,QAAQC,IAAI,SACxBW,GAAG,eAAe,SAACC,GACzBF,EAASE,EAAKC,W,6jBC2EHC,E,2MAtGbC,WAAaC,IAAMrD,EAAQf,eAAeV,WAAW+E,KAAI,SAAAlE,GAAC,OAAIS,EAAYT,M,EAC1EX,qBAAuBuB,EAAQf,eAAeR,qB,EAC9C8E,QAAUrE,EAAgB,EAAKkE,WAAY,EAAK3E,sB,EAEhDiC,MAAQ,CACN8C,KAAM,CACJ9B,KAAM,GACNC,UAAW,GACX8B,UAAW,EACXzC,OAAQ,EAAKuC,QAAQ,IAEvBG,cAAc,G,EAGhBC,oBAAsB,EAAKA,oBAAoBC,KAAzB,gB,EACtBC,gBAAkB,EAAKA,gBAAgBD,KAArB,gB,EAClBE,QAAU,EAAKA,QAAQF,KAAb,gB,EACVG,UAAY,EAAKA,UAAUH,KAAf,gB,EACZI,WAAa,EAAKA,WAAWJ,KAAhB,gB,6EAGX,IACMK,EADWtD,KAAKE,MAAMqD,MAAMC,IACXC,MAAM,KAE7B,OADAH,EAAMI,MACCJ,EAAMK,KAAK,O,0CAGAC,GAClBA,EAAMC,iBACN,IAAM1E,EAAMyE,EAAME,OAAO/C,KACnBgD,EAAQH,EAAME,OAAOC,MAAMC,OACjChE,KAAKN,UAAS,kBAAe,CAACmD,KAAK,KAArB,EAAGA,KAAiB,eAAa1D,EAAM4E,U,sCAGvCH,GAAQ,IAAD,OAErB,GADAA,EAAMC,iBACF7D,KAAKmD,UACP,OAAOc,EAAcjE,KAAKD,MAAM8C,MAAMqB,MAAK,WACzC,EAAKxE,SAAS,CAAEqD,cAAc,IAC9BoB,YAAW,WAAQ,EAAKjE,MAAMkE,QAAQpF,KAAK,EAAKqF,iBAAmB,U,gCAK/DvB,GACR,IAAMzC,EAASL,KAAK4C,QAAQE,GAC5B9C,KAAKN,UAAS,kBAAe,CAACmD,KAAK,KAArB,EAAGA,KAAiB,CAAYC,YAAWzC,iB,iCAGhD1B,GACT,IAAM2F,GAAWtE,KAAKD,MAAM8C,KAAKC,UAAYnE,EAAIqB,KAAKlC,sBAAwBkC,KAAKlC,qBACnFkC,KAAKoD,UAAUkB,K,gCAGN,IAAD,EAC4BtE,KAAKD,MAAM8C,KAAvC9B,EADA,EACAA,KAAMC,EADN,EACMA,UAAWX,EADjB,EACiBA,OACzB,MAAuB,KAAhBU,EAAKiD,QAAsC,KAArBhD,EAAUgD,QAAmC,KAAlB3D,EAAO2D,S,+BAGvD,IAAD,OACDO,EAAYvE,KAAK4C,QAAQD,KAAI,SAACa,EAAK7E,GACvC,IAAM6F,EAAU,EAAKzE,MAAM8C,KAAKC,YAAcnE,EAC9C,OACE,yBAAKQ,IAAKR,EAAGiC,UAAU,OAAOC,MAAO2D,EAAU,CAACC,QAAS,SAAW,CAACA,QAAS,SAC5E,yBAAK7D,UAAU,cAAcjC,EAAI,EAAjC,MAAuC,EAAKb,sBAC5C,+BACE,2BAAO+C,MAAO,CAAC4D,QAAS,QAASC,KAAK,QAAQ3D,KAAK,SAASgD,MAAOP,EACjEmB,SAAU,EAAK3B,oBAAqB4B,UAAQ,EAACJ,QAASA,IACxD,yBAAK5D,UAAU,aAAaC,MAAO,CAAEgE,OAAQ,mBAAqB5E,IAAKuD,EAAK1C,IAAK0C,SAKzF,OACE,yBAAK5C,UAAU,YACb,4BAAQA,UAAU,mBAChB,wBAAIA,UAAU,kBAAd,oCAGCZ,KAAKD,MAAMgD,cACV,0BAAMnC,UAAU,gBAAgBkE,SAAU9E,KAAKkD,iBAC7C,2BAAOtC,UAAU,QAAjB,kCACA,yBAAKA,UAAU,uBACZ2D,EACD,uBAAG3D,UAAU,OAAOmE,QAAS,kBAAM,EAAK1B,YAAY,KAApD,UACA,uBAAGzC,UAAU,OAAOmE,QAAS,kBAAM,EAAK1B,WAAY,KAApD,WAEF,yBAAKzC,UAAU,0BACb,2BAAOA,UAAU,SAAQ,iCAAU,2BAAO8D,KAAK,OAAO3D,KAAK,OAAOiE,YAAY,eAAKL,SAAU3E,KAAKgD,oBAAqB4B,UAAQ,KAC/H,2BAAOhE,UAAU,SAAQ,8BAAUG,KAAK,YAAYiE,YAAY,qBAAML,SAAU3E,KAAKgD,oBAAqB4B,UAAQ,MAEpH,2BAAOhE,UAAU,MAAM8D,KAAK,SAASX,MAAM,iBAC3C,uBAAGnD,UAAU,OAAOqE,KAAMjF,KAAKqE,eAA/B,yCAIN,kBAAC,EAAD,CAAQjE,KAAMJ,KAAKD,MAAM8C,KAAM1C,KAAMH,KAAKD,MAAMgD,oB,GAjGjC9B,a,yBCXFiE,E,WACnB,aAAe,oBACblF,KAAKmF,EAAI,G,iDAGNC,GACHpF,KAAKmF,EAAEnG,KAAKoG,K,4BAKZ,OADepF,KAAKmF,EAAEE,OAAO,EAAG,GAAG,K,gCAKnC,OAAyB,IAAlBrF,KAAKmF,EAAEvG,W,KCDG0G,E,2MACnB7C,WAAaC,IAAMrD,EAAQf,eAAeV,WAAW+E,KAAI,SAAAlE,GAAC,OAAIS,EAAYT,M,EAC1E8G,UAAYhH,EAAgB,EAAKkE,WAAYpD,EAAQf,eAAeT,sB,EACpE0H,UAAYtG,EAAgB,GAAD,mBAAK,EAAKsG,WAAV,YAAwB,EAAKA,a,EACxDC,UAAY,G,EACZzF,MAAQ,CACN0F,WAAW,EACX1C,cAAc,EACd3C,KAAM,GACNmF,UAAW,EAAKA,UAChBG,eAAe,G,EAsCjBC,WAAa,SAACvF,GACZ,EAAKV,UAAS,iBAAO,CAAEqD,cAAc,EAAM3C,KAAMwF,OAAOC,OAAO,GAAIzF,OAEnE+D,YAAW,WACT,EAAKzE,UAAS,iBAAO,CAAEqD,cAAc,QACpC,M,EAGL+C,WAAa,SAACC,EAAUC,GACtB,IAAMC,EAAWF,EAASG,UAAYF,EAAStC,MAAQqC,EAASrC,MAChE,EAAKiC,WAAWM,GAChBD,EAAShH,KAAKiH,I,mFA9CK,IAAD,OACZF,EAAW,IAAIb,EACfc,EAAW,IAAId,EAErBjB,GAAY,SAAC7D,GAAD,OAAU2F,EAAS/G,KAAKoB,MAEpCG,OAAOd,OAAS,WACd,EAAKC,UAAS,kBAAoB,CAAE+F,WAAtB,EAAGA,cAEjB,EAAKD,UAAUxG,KAAKmH,aAAY,WAC9B,EAAKL,WAAWC,EAAUC,KACzB,OAGLG,aAAY,WACV,EAAKzG,SAAS,CACZgG,eAAe,IAEjBvB,YAAW,WACT,EAAKzE,SAAS,CACZ6F,UAAWtG,EAAgB,EAAKc,MAAMwF,aAExCpB,YAAW,WACT,EAAKzE,SAAS,CACZgG,eAAe,MAEhB,OACF,OACF,O,6CAIHU,cAAcpG,KAAKwF,a,+BAiBX,IAAD,OACP,OACE,yBAAK5E,UAAU,aAEXZ,KAAKD,MAAM0F,WAAa,yBAAK7E,UAAU,WACrC,yBAAKX,IAAKoG,IAAavF,IAAI,KAC3B,6CAGJ,6BAASF,UAAU,iBAEjBZ,KAAKuF,UAAU5C,KAAI,SAAC2D,EAAUC,GAAX,OACjB,yBAAKpH,IAAG,UAAKmH,EAAL,YAAiBC,GAAO3F,UAAW,EAAKb,MAAM0F,WAAa,EAAK1F,MAAM2F,cAAgB,mBAAqB,qBACjH,yBAAKzF,IAAKqG,EAAUxF,IAAI,UAK9B,kBAAC,EAAD,CAAQV,KAAMJ,KAAKD,MAAMK,KAAMD,KAAMH,KAAKD,MAAMgD,eAChD,uBAAGnC,UAAU,eAAeqE,KAAI,UAAKjF,KAAKE,MAAMqD,MAAMC,IAAtB,eAAhC,gD,GAjF2BvC,aCQpBuF,EAbH,SAAC,GAAe,IAFVvJ,EAEHsG,EAAY,EAAZA,MACblE,EAAQpB,KAAKsF,EAAMkD,OAAOvI,OAC1B+F,IAJgBhH,EAKPoC,EAAQjB,eAAenB,MALNyJ,SAASzJ,MAAQA,EAM3C,IAAM0J,EAAOpD,EAAMC,IACnB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOmD,KAAI,UAAKA,EAAL,cAAuBC,UAAWpE,IAC7C,kBAAC,IAAD,CAAOmE,KAAMA,EAAMC,UAAWtB,MCP9BuB,EAAcC,QACW,cAA7BvG,OAAOwG,SAASC,UAEe,UAA7BzG,OAAOwG,SAASC,UAEhBzG,OAAOwG,SAASC,SAASzD,MACvB,2DAsCN,SAAS0D,EAAgBC,GACvBjF,UAAUkF,cACPC,SAASF,GACThD,MAAK,SAAAmD,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBxH,QACfkC,UAAUkF,cAAcO,WAK1BC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,4CAMrBC,OAAM,SAAAC,GACLH,QAAQG,MAAM,4CAA6CA,MCxEjE,IAAMC,EAAO,kBAAO,2CAapBC,IAASC,OAAO,mBAXH,WACX,OACE,kBAAC,IAAD,CAAQC,SAAUC,GAAwBC,cAAY,GACpD,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOzB,KAAK,WAAWC,UAAWJ,IAClC,kBAAC,IAAD,CAAOG,KAAK,IAAIC,UAAWmB,QAMnB,MAAUrB,SAAS2B,eAAe,SDAnC,WACb,GAA6C,kBAAmBpG,UAAW,CAGzE,GADkB,IAAIqG,IAAIH,GAAwB5H,OAAOwG,UAC3CwB,SAAWhI,OAAOwG,SAASwB,OAIvC,OAGFhI,OAAOiI,iBAAiB,QAAQ,WAC9B,IAAMtB,EAAK,UAAMiB,GAAN,sBAEPtB,IAiDV,SAAiCK,GAE/BuB,MAAMvB,GACHhD,MAAK,SAAAwE,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQC,IAAI,gBAAgBC,QAAQ,cAG7C7G,UAAUkF,cAAc4B,MAAM7E,MAAK,SAAAmD,GACjCA,EAAa2B,aAAa9E,MAAK,WAC7B3D,OAAOwG,SAASkC,eAKpBhC,EAAgBC,MAGnBW,OAAM,WACLF,QAAQC,IACN,oEArEAsB,CAAwBhC,GAIxBjF,UAAUkF,cAAc4B,MAAM7E,MAAK,WACjCyD,QAAQC,IACN,gHAMJX,EAAgBC,OC3BxBiC,K","file":"static/js/main.c0a94011.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading.822699a4.gif\";","const CHYY_CONFIG = {\n  doc: {\n    title: \"<3 YaYun & ChinHui <3\"\n  },\n  db: {\n    apiKey: \"AIzaSyD_1irJWOgT9x5fvmbXJm0fRRRZ8DNUfpU\",\n    authDomain: \"weddi-app.firebaseapp.com\",\n    databaseURL: \"https://weddi-app.firebaseio.com/\",\n    projectId: \"weddi-app\",\n    storageBucket: \"weddi-app.appspot.com\",\n    messagingSenderId: \"324415165027\",\n    appId: \"1:324415165027:web:76b8291835ef32c5c75e56\"\n  },\n  img: {\n    endpoint: \"https://storage.googleapis.com/image.weddi.app/chyy/\",\n    totalImgs: 114,\n    bgImgsShouldBePicked: 40,\n    fmImgsShouldBePicked: 5\n  }\n};\n\nconst TLTY_CONFIG = {\n  doc: {\n    title: \"<3 水母 & 印麥王 <3\"\n  },\n  db: {\n    apiKey: \"AIzaSyD_1irJWOgT9x5fvmbXJm0fRRRZ8DNUfpU\",\n    authDomain: \"weddi-app.firebaseapp.com\",\n    databaseURL: \"https://weddi-app-test.firebaseio.com/\",\n    projectId: \"weddi-app\",\n    storageBucket: \"weddi-app.appspot.com\",\n    messagingSenderId: \"324415165027\",\n    appId: \"1:324415165027:web:76b8291835ef32c5c75e56\"\n  },\n  img: {\n    endpoint: \"https://storage.googleapis.com/image.weddi.app/tlty/\",\n    totalImgs: 30,\n    bgImgsShouldBePicked: 30,\n    fmImgsShouldBePicked: 5\n  }\n};\n\nconst TEST_CONFIG = {\n  doc: {\n    title: \"<3 Groom & Bride <3\"\n  },\n  db: {\n    apiKey: \"AIzaSyD_1irJWOgT9x5fvmbXJm0fRRRZ8DNUfpU\",\n    authDomain: \"weddi-app.firebaseapp.com\",\n    databaseURL: \"https://weddi-app-test.firebaseio.com/\",\n    projectId: \"weddi-app\",\n    storageBucket: \"weddi-app.appspot.com\",\n    messagingSenderId: \"324415165027\",\n    appId: \"1:324415165027:web:76b8291835ef32c5c75e56\"\n  },\n  img: {\n    endpoint: \"https://storage.googleapis.com/image.weddi.app/chyy/\",\n    totalImgs: 114,\n    bgImgsShouldBePicked: 40,\n    fmImgsShouldBePicked: 5\n  }\n};\n\nconst setConfigById = gnbId => {\n  switch (gnbId) {\n    case \"chyy\":\n      return CHYY_CONFIG;\n    case \"tlty\":\n      return TLTY_CONFIG;\n    default:\n      return TEST_CONFIG;\n  }\n};\n\nlet config;\n\nconst init = gnbId => {\n  if (!config) {\n    config = setConfigById(gnbId);\n  }\n  return config;\n};\n\nconst getDocConfig = () => config.doc;\nconst getDBConfig = () => config.db;\nconst getImgConfig = () => config.img;\n\nexport default {\n  init,\n  getDocConfig,\n  getDBConfig,\n  getImgConfig\n};\n","import random from 'lodash/random';\n\nexport const combinationList = (list, k) => {\n  const result = [];\n  /* select k elements n-k <= i < n */\n  for (let i = list.length - k; i < list.length; i++) {\n    /* A random integer such that 0 <= j < i */\n    const j = random(i);\n    /* Select element j if element j is not selected yet */\n    /* Otherwise select element i */\n    if (result.includes(list[j])) {\n      result.push(list[i]);\n    } else {\n      result.push(list[j]);\n    }\n  }\n  return result;\n};\n\nexport const permutationList = list => {\n  for (let i = 0; i <= list.length - 2; i++) {\n    /* A random integer such that i <= j < n */\n    const j = random(i, list.length - 1);\n    /* Swap the randomly picked element with list[i] */\n    [list[i], list[j]] = [list[j], list[i]];\n  }\n  return list;\n};\n","import Configs from \"../configs\";\n\nconst IMG_SIZE_S = '_small';\nconst IMG_SIZE_M = '';\n\nexport const getImageUrl = (key, size = IMG_SIZE_S) =>\n  `${Configs.getImgConfig().endpoint}${key}${size}.jpg`;\n\nexport const IMG_SIZES = {\n  IMG_SIZE_S,\n  IMG_SIZE_M\n};\n","import React, { Component } from 'react';\nimport './board.css';\n\nexport default class Dialog extends Component {\n  constructor() {\n    super();\n    this.img =  new Image();\n    const t = this;\n    this.img.onload = function() {\n      t.setState(() => ({\n        imgWidth: this.width || 0,\n        imgHeight: this.height || 0,\n      }));\n    };\n    this.state = {\n      imgWidth: 0,\n      imgHeight: 0,\n    };\n  }\n\n  componentDidUpdate() {\n    this.img.src = this.props.show ? this.props.user.imgUrl : '';\n  }\n\n  render() {\n    const { user, show } = this.props;\n\n    const mayMobile = window.innerWidth < 1000;\n    const verticalImg = this.state.imgWidth < this.state.imgHeight;\n    const modalStyle = (show && mayMobile && verticalImg) ? { margin: '10% 20% 50px' } : {};\n\n    return (\n      <div className={show ? 'dialog show-dialog' : 'dialog'}>\n        <div className=\"modal-sm\" style={modalStyle}>\n          <div className=\"image-container\">\n            <img className=\"user-image\" src={user.imgUrl} alt=\"images\" />\n          </div>\n          <div className=\"message\">\n            <h2>@ {user.name}</h2>\n            <p>{user.greetings}</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import * as firebase from 'firebase/app';\nimport 'firebase/database';\n\nimport Configs from '../configs';\n\nclass apiBase {\n  constructor () {\n    this.app = firebase.initializeApp(Configs.getDBConfig());\n    this.firebase = firebase;\n    this.database = firebase.database();\n  }\n  getDB () {\n    return this.database;\n  }\n};\n\nlet api;\n\nconst init = () => {\n  if (!api) {\n    api = new apiBase();\n  }\n  return api;\n};\n\nconst writePost = (postData) => {\n  const postId = api.getDB().ref().child('posts').push().key;\n  const wrappedPostData = {\n    ...postData,\n    modifiedTime: new Date().toISOString(),\n    userAgent: navigator.userAgent,\n    id: postId,\n  };\n  return api.getDB().ref(`posts/${postId}`).set(wrappedPostData);\n};\n\nconst getPost = (callback) => {\n  const postRef = api.getDB().ref('posts');\n  postRef.on('child_added', (data) => {\n    callback(data.val());\n  });\n};\n\nexport default {\n  init,\n  writePost,\n  getPost,\n};\n","import React, { Component } from 'react';\nimport range from 'lodash/range';\nimport './greeting.css';\n\nimport Configs from '../configs';\nimport { combinationList } from '../utils/random';\nimport { getImageUrl } from '../images';\nimport Dialog from '../Board/Dialog';\n\nimport Api from '../api';\n\nclass Greeting extends Component {\n  allImgUrls = range(Configs.getImgConfig().totalImgs).map(k => getImageUrl(k));\n  fmImgsShouldBePicked = Configs.getImgConfig().fmImgsShouldBePicked;\n  imgUrls = combinationList(this.allImgUrls, this.fmImgsShouldBePicked);\n\n  state = {\n    form: {\n      name: '',\n      greetings: '',\n      imgPicked: 0,\n      imgUrl: this.imgUrls[0],\n    },\n    modalDisplay: false,\n  };\n\n  onTextChangeHandler = this.onTextChangeHandler.bind(this);\n  onSubmitHandler = this.onSubmitHandler.bind(this);\n  isValid = this.isValid.bind(this);\n  setImgIdx = this.setImgIdx.bind(this);\n  plusImgIdx = this.plusImgIdx.bind(this);\n\n  getUpperUrl() {\n    const matchUrl = this.props.match.url;\n    const paths = matchUrl.split('/');\n    paths.pop();\n    return paths.join('/');\n  }\n\n  onTextChangeHandler(event) {\n    event.preventDefault();\n    const key = event.target.name;\n    const value = event.target.value.trim();\n    this.setState(({ form }) => ({form: {...form, [key]: value}}));\n  }\n\n  onSubmitHandler(event) {\n    event.preventDefault();\n    if (this.isValid()) {\n      return Api.writePost(this.state.form).then(() => {\n        this.setState({ modalDisplay: true });\n        setTimeout(() => { this.props.history.push(this.getUpperUrl()); }, 3000);\n      });\n    }\n  }\n\n  setImgIdx(imgPicked) {\n    const imgUrl = this.imgUrls[imgPicked];\n    this.setState(({ form }) => ({form: {...form, imgPicked, imgUrl}}));\n  }\n\n  plusImgIdx(i) {\n    const nextIdx = (this.state.form.imgPicked + i + this.fmImgsShouldBePicked) % this.fmImgsShouldBePicked;\n    this.setImgIdx(nextIdx);\n  }\n\n  isValid() {\n    const { name, greetings, imgUrl } = this.state.form;\n    return name.trim() !== '' && greetings.trim() !== '' && imgUrl.trim() !== '';\n  }\n\n  render() {\n    const picRadios = this.imgUrls.map((url, i) => {\n      const checked = this.state.form.imgPicked === i;\n      return (\n        <div key={i} className=\"fade\" style={checked ? {display: 'block'} : {display: 'none'}}>\n          <div className=\"numbertext\">{i + 1} / {this.fmImgsShouldBePicked}</div>\n          <label>\n            <input style={{display: 'none'}} type=\"radio\" name=\"imgUrl\" value={url}\n              onChange={this.onTextChangeHandler} required checked={checked} />\n            <img className=\"img-choice\" style={{ border: '5px solid white' }} src={url} alt={url} />\n          </label>\n        </div>\n      );\n    });\n    return (\n      <div className=\"greeting\">\n        <header className=\"greeting-header\">\n          <h1 className=\"greeting-title\">祝福留言版</h1>\n        </header>\n        {\n          !this.state.modalDisplay && (\n            <form className=\"greeting-form\" onSubmit={this.onSubmitHandler}>\n              <label className=\"pick\">挑一張照片</label>\n              <div className=\"slideshow-container\">\n                {picRadios}\n                <a className=\"prev\" onClick={() => this.plusImgIdx(-1)}>&#10094;</a>\n                <a className=\"next\" onClick={() => this.plusImgIdx( 1)}>&#10095;</a>\n              </div>\n              <div className=\"greeting-message-block\">\n                <label className=\"input\"><h2>@</h2><input type=\"text\" name=\"name\" placeholder=\"姓名\" onChange={this.onTextChangeHandler} required /></label>\n                <label className=\"input\"><textarea name=\"greetings\" placeholder=\"祝賀詞\" onChange={this.onTextChangeHandler} required /></label>\n              </div>\n              <input className=\"btn\" type=\"submit\" value=\"留言\" />\n              <a className=\"link\" href={this.getUpperUrl()}>去照片牆瞧瞧</a>\n            </form>\n          )\n        }\n        <Dialog user={this.state.form} show={this.state.modalDisplay} />\n      </div>\n    );\n  }\n}\n\nexport default Greeting;\n","export default class Queue {\n  constructor() {\n    this.q = [];\n  }\n\n  push(element) {\n    this.q.push(element);\n  }\n\n  pop() {\n    const result = this.q.splice(0, 1)[0];\n    return result;\n  }\n\n  isEmpty() {\n    return this.q.length === 0;\n  }\n}","import React, { Component } from 'react';\nimport range from 'lodash/range';\nimport './board.css';\nimport loadingIcon from '../images/loading.gif';\nimport Dialog from './Dialog';\n\nimport Queue from './queue';\nimport Configs from '../configs';\nimport { combinationList, permutationList } from '../utils/random';\nimport { getImageUrl } from '../images';\n\n\nimport Api from '../api';\n\nexport default class Board extends Component {\n  allImgUrls = range(Configs.getImgConfig().totalImgs).map(k => getImageUrl(k));\n  bgImgUrls = combinationList(this.allImgUrls, Configs.getImgConfig().bgImgsShouldBePicked);\n  bgImgUrls = permutationList([...this.bgImgUrls, ...this.bgImgUrls]);\n  intervals = [];\n  state = {\n    isLoading: true,\n    modalDisplay: false,\n    user: {},\n    bgImgUrls: this.bgImgUrls,\n    isBgSwitching: false,\n  };\n\n  componentDidMount() {\n    const newFeeds = new Queue();\n    const oldFeeds = new Queue();\n\n    Api.getPost((user) => newFeeds.push(user));\n\n    window.onload = () => {\n      this.setState(({ isLoading }) => ({ isLoading: !isLoading }))\n\n      this.intervals.push(setInterval(() => {\n        this.pickUpFeed(newFeeds, oldFeeds);\n      }, 8000));\n    };\n\n    setInterval(() => {\n      this.setState({\n        isBgSwitching: true,\n      });\n      setTimeout(() => {\n        this.setState({\n          bgImgUrls: permutationList(this.state.bgImgUrls),\n        });\n        setTimeout(() => {\n          this.setState({\n            isBgSwitching: false,\n          })\n        }, 1000);\n      }, 1000);\n    }, 5 * 60 * 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.intervals);\n  }\n\n  showDialog = (user) => {\n    this.setState(() => ({ modalDisplay: true, user: Object.assign({}, user) }));\n\n    setTimeout(() => {\n      this.setState(() => ({ modalDisplay: false }));\n    }, 5000);\n  }\n\n  pickUpFeed = (newFeeds, oldFeeds) => {\n    const nextFeed = newFeeds.isEmpty() ? oldFeeds.pop() : newFeeds.pop();\n    this.showDialog(nextFeed);\n    oldFeeds.push(nextFeed);\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        {\n          this.state.isLoading && <div className=\"loading\">\n            <img src={loadingIcon} alt=\"\" />\n            <span>Loading...</span>\n          </div>\n        }\n        <section className=\"pic-container\">\n        {\n          this.bgImgUrls.map((bgImgUrl, idx) => (\n            <div key={`${bgImgUrl}_${idx}`} className={this.state.isLoading || this.state.isBgSwitching ? 'pic-block hidden' : 'pic-block visible'}>\n              <img src={bgImgUrl} alt=\"\" />\n            </div>\n          ))\n        }\n        </section>\n        <Dialog user={this.state.user} show={this.state.modalDisplay} />\n        <a className=\"message-link\" href={`${this.props.match.url}/greetings`}>&lt;&lt; 留下你的祝福</a>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Greeting from './Greeting';\nimport Board from './Board';\nimport Configs from './configs';\nimport Api from './api';\n\nconst setTitle = (title) => document.title = title;\n\nconst App = ({ match }) => {\n  Configs.init(match.params.gnbId);\n  Api.init();\n  setTitle(Configs.getDocConfig().title);\n  const path = match.url;\n  return (\n    <Switch>\n      <Route path={`${path}/greetings`} component={Greeting} />\n      <Route path={path} component={Board} />\n    </Switch>\n  );\n};\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nconst Home = () => (<div>Weddi App</div>);\n\nconst Root = () => {\n  return (\n    <Router basename={process.env.PUBLIC_URL} forceRefresh>\n      <Switch>\n        <Route path=\"/:gnbId/\" component={App} />\n        <Route path=\"/\" component={Home} />\n      </Switch>\n    </Router>\n  );\n};\n\nReactDOM.render(<Root />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}